/*******************************************************************************
 * Copyright (c) 2018 Association Cénotélie (cenotelie.fr)
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General
 * Public License along with this program.
 * If not, see <http://www.gnu.org/licenses/>.
 *
 ******************************************************************************/

/**
 * WARNING: this file has been generated by
 * Hime Parser Generator
 */

package fr.cenotelie.hime.sdk;

import java.util.HashMap;
import java.util.Map;

/**
 * Contains the supported Unicode categories
 */
public class UnicodeCategories {
    /**
     * The Unicode category Cc
     */
    private static UnicodeCategory categoryCc = null;

    /**
     * Gets the Unicode category Cc
     *
     * @return The Unicode category Cc
     */
    public static UnicodeCategory getCc() {
        if (categoryCc != null)
            return categoryCc;
        categoryCc = new UnicodeCategory("Cc");
        categoryCc.addSpan(0x007e, 0x007e);
        return categoryCc;
    }

    /**
     * The Unicode category Mn
     */
    private static UnicodeCategory categoryMn = null;

    /**
     * Gets the Unicode category Mn
     *
     * @return The Unicode category Mn
     */
    public static UnicodeCategory getMn() {
        if (categoryMn != null)
            return categoryMn;
        categoryMn = new UnicodeCategory("Mn");
        categoryMn.addSpan(0x02ef, 0x02ff);
        categoryMn.addSpan(0x0482, 0x0482);
        categoryMn.addSpan(0x058f, 0x058f);
        categoryMn.addSpan(0x05be, 0x05be);
        categoryMn.addSpan(0x05c0, 0x05c0);
        categoryMn.addSpan(0x05c3, 0x05c3);
        categoryMn.addSpan(0x05c6, 0x05c6);
        categoryMn.addSpan(0x060e, 0x060f);
        categoryMn.addSpan(0x0641, 0x064a);
        categoryMn.addSpan(0x066e, 0x066f);
        categoryMn.addSpan(0x06d5, 0x06d5);
        categoryMn.addSpan(0x06de, 0x06de);
        categoryMn.addSpan(0x06e5, 0x06e6);
        categoryMn.addSpan(0x06e9, 0x06e9);
        categoryMn.addSpan(0x0710, 0x0710);
        categoryMn.addSpan(0x0712, 0x072f);
        categoryMn.addSpan(0x074d, 0x07a5);
        categoryMn.addSpan(0x07ca, 0x07ea);
        categoryMn.addSpan(0x0800, 0x0815);
        categoryMn.addSpan(0x081a, 0x081a);
        categoryMn.addSpan(0x0824, 0x0824);
        categoryMn.addSpan(0x0828, 0x0828);
        categoryMn.addSpan(0x0840, 0x0858);
        categoryMn.addSpan(0x0860, 0x08bd);
        categoryMn.addSpan(0x08e2, 0x08e2);
        categoryMn.addSpan(0x0904, 0x0939);
        categoryMn.addSpan(0x093b, 0x093b);
        categoryMn.addSpan(0x093e, 0x0940);
        categoryMn.addSpan(0x0949, 0x094c);
        categoryMn.addSpan(0x0950, 0x0950);
        categoryMn.addSpan(0x0958, 0x0961);
        categoryMn.addSpan(0x0972, 0x0980);
        categoryMn.addSpan(0x0985, 0x09b9);
        categoryMn.addSpan(0x09be, 0x09c0);
        categoryMn.addSpan(0x09c7, 0x09cc);
        categoryMn.addSpan(0x09dc, 0x09e1);
        categoryMn.addSpan(0x09fd, 0x09fd);
        categoryMn.addSpan(0x0a05, 0x0a39);
        categoryMn.addSpan(0x0a3e, 0x0a40);
        categoryMn.addSpan(0x0a66, 0x0a6f);
        categoryMn.addSpan(0x0a72, 0x0a74);
        categoryMn.addSpan(0x0a85, 0x0ab9);
        categoryMn.addSpan(0x0abe, 0x0ac0);
        categoryMn.addSpan(0x0ac9, 0x0acc);
        categoryMn.addSpan(0x0ad0, 0x0ae1);
        categoryMn.addSpan(0x0af9, 0x0af9);
        categoryMn.addSpan(0x0b05, 0x0b39);
        categoryMn.addSpan(0x0b3e, 0x0b3e);
        categoryMn.addSpan(0x0b40, 0x0b40);
        categoryMn.addSpan(0x0b47, 0x0b4c);
        categoryMn.addSpan(0x0b5c, 0x0b61);
        categoryMn.addSpan(0x0b72, 0x0b77);
        categoryMn.addSpan(0x0bbe, 0x0bbf);
        categoryMn.addSpan(0x0bc1, 0x0bcc);
        categoryMn.addSpan(0x0bfa, 0x0bfa);
        categoryMn.addSpan(0x0c05, 0x0c3d);
        categoryMn.addSpan(0x0c41, 0x0c44);
        categoryMn.addSpan(0x0c58, 0x0c61);
        categoryMn.addSpan(0x0c80, 0x0c80);
        categoryMn.addSpan(0x0c85, 0x0cb9);
        categoryMn.addSpan(0x0cbe, 0x0cbe);
        categoryMn.addSpan(0x0cc0, 0x0cc4);
        categoryMn.addSpan(0x0cc7, 0x0ccb);
        categoryMn.addSpan(0x0cde, 0x0ce1);
        categoryMn.addSpan(0x0cf1, 0x0cf2);
        categoryMn.addSpan(0x0d05, 0x0d3a);
        categoryMn.addSpan(0x0d3e, 0x0d40);
        categoryMn.addSpan(0x0d46, 0x0d4c);
        categoryMn.addSpan(0x0d5f, 0x0d61);
        categoryMn.addSpan(0x0d85, 0x0dc6);
        categoryMn.addSpan(0x0dcf, 0x0dd1);
        categoryMn.addSpan(0x0e01, 0x0e30);
        categoryMn.addSpan(0x0e32, 0x0e33);
        categoryMn.addSpan(0x0e46, 0x0e46);
        categoryMn.addSpan(0x0e81, 0x0eb0);
        categoryMn.addSpan(0x0eb2, 0x0eb3);
        categoryMn.addSpan(0x0ec6, 0x0ec6);
        categoryMn.addSpan(0x0f15, 0x0f17);
        categoryMn.addSpan(0x0f34, 0x0f34);
        categoryMn.addSpan(0x0f36, 0x0f36);
        categoryMn.addSpan(0x0f38, 0x0f38);
        categoryMn.addSpan(0x0f40, 0x0f6c);
        categoryMn.addSpan(0x0f7f, 0x0f7f);
        categoryMn.addSpan(0x0f85, 0x0f85);
        categoryMn.addSpan(0x0f88, 0x0f8c);
        categoryMn.addSpan(0x0fbe, 0x0fc5);
        categoryMn.addSpan(0x102b, 0x102c);
        categoryMn.addSpan(0x1031, 0x1031);
        categoryMn.addSpan(0x1038, 0x1038);
        categoryMn.addSpan(0x103b, 0x103c);
        categoryMn.addSpan(0x1056, 0x1057);
        categoryMn.addSpan(0x105a, 0x105d);
        categoryMn.addSpan(0x106e, 0x1070);
        categoryMn.addSpan(0x1075, 0x1081);
        categoryMn.addSpan(0x1083, 0x1084);
        categoryMn.addSpan(0x1087, 0x108c);
        categoryMn.addSpan(0x109a, 0x109c);
        categoryMn.addSpan(0x10fd, 0x135a);
        categoryMn.addSpan(0x16f1, 0x1711);
        categoryMn.addSpan(0x1720, 0x1731);
        categoryMn.addSpan(0x1740, 0x1751);
        categoryMn.addSpan(0x1760, 0x1770);
        categoryMn.addSpan(0x1780, 0x17b3);
        categoryMn.addSpan(0x17b6, 0x17b6);
        categoryMn.addSpan(0x17be, 0x17c5);
        categoryMn.addSpan(0x17c7, 0x17c8);
        categoryMn.addSpan(0x17dc, 0x17dc);
        categoryMn.addSpan(0x1807, 0x180a);
        categoryMn.addSpan(0x1844, 0x1884);
        categoryMn.addSpan(0x1887, 0x18a8);
        categoryMn.addSpan(0x18aa, 0x191e);
        categoryMn.addSpan(0x1923, 0x1926);
        categoryMn.addSpan(0x1929, 0x1931);
        categoryMn.addSpan(0x1933, 0x1938);
        categoryMn.addSpan(0x1a00, 0x1a16);
        categoryMn.addSpan(0x1a19, 0x1a1a);
        categoryMn.addSpan(0x1a55, 0x1a55);
        categoryMn.addSpan(0x1a57, 0x1a57);
        categoryMn.addSpan(0x1a61, 0x1a61);
        categoryMn.addSpan(0x1a63, 0x1a64);
        categoryMn.addSpan(0x1a6d, 0x1a72);
        categoryMn.addSpan(0x1aa8, 0x1aad);
        categoryMn.addSpan(0x1abe, 0x1abe);
        categoryMn.addSpan(0x1b05, 0x1b33);
        categoryMn.addSpan(0x1b35, 0x1b35);
        categoryMn.addSpan(0x1b3b, 0x1b3b);
        categoryMn.addSpan(0x1b3d, 0x1b41);
        categoryMn.addSpan(0x1b61, 0x1b6a);
        categoryMn.addSpan(0x1b74, 0x1b7c);
        categoryMn.addSpan(0x1ba1, 0x1ba1);
        categoryMn.addSpan(0x1ba6, 0x1ba7);
        categoryMn.addSpan(0x1baa, 0x1baa);
        categoryMn.addSpan(0x1bba, 0x1be5);
        categoryMn.addSpan(0x1be7, 0x1be7);
        categoryMn.addSpan(0x1bea, 0x1bec);
        categoryMn.addSpan(0x1bee, 0x1bee);
        categoryMn.addSpan(0x1c24, 0x1c2b);
        categoryMn.addSpan(0x1c34, 0x1c35);
        categoryMn.addSpan(0x1cc0, 0x1cc7);
        categoryMn.addSpan(0x1cd3, 0x1cd3);
        categoryMn.addSpan(0x1ce1, 0x1ce1);
        categoryMn.addSpan(0x1ce9, 0x1cec);
        categoryMn.addSpan(0x1cf2, 0x1cf3);
        categoryMn.addSpan(0x1cf7, 0x1cf7);
        categoryMn.addSpan(0x1d9b, 0x1dbf);
        categoryMn.addSpan(0x20a0, 0x20bf);
        categoryMn.addSpan(0x20dd, 0x20e0);
        categoryMn.addSpan(0x20e2, 0x20e4);
        categoryMn.addSpan(0x2cee, 0x2cee);
        categoryMn.addSpan(0x2d70, 0x2d70);
        categoryMn.addSpan(0x2d80, 0x2dde);
        categoryMn.addSpan(0x3021, 0x3029);
        categoryMn.addSpan(0x3041, 0x3096);
        categoryMn.addSpan(0xa66e, 0xa66e);
        categoryMn.addSpan(0xa673, 0xa673);
        categoryMn.addSpan(0xa69c, 0xa69d);
        categoryMn.addSpan(0xa6e6, 0xa6ef);
        categoryMn.addSpan(0xa7fb, 0xa801);
        categoryMn.addSpan(0xa803, 0xa805);
        categoryMn.addSpan(0xa807, 0xa80a);
        categoryMn.addSpan(0xa823, 0xa824);
        categoryMn.addSpan(0xa8b4, 0xa8c3);
        categoryMn.addSpan(0xa8d0, 0xa8d9);
        categoryMn.addSpan(0xa90a, 0xa925);
        categoryMn.addSpan(0xa930, 0xa946);
        categoryMn.addSpan(0xa960, 0xa97c);
        categoryMn.addSpan(0xa984, 0xa9b2);
        categoryMn.addSpan(0xa9b4, 0xa9b5);
        categoryMn.addSpan(0xa9ba, 0xa9bb);
        categoryMn.addSpan(0xa9e0, 0xa9e4);
        categoryMn.addSpan(0xa9fa, 0xaa28);
        categoryMn.addSpan(0xaa2f, 0xaa30);
        categoryMn.addSpan(0xaa33, 0xaa34);
        categoryMn.addSpan(0xaa40, 0xaa42);
        categoryMn.addSpan(0xaa44, 0xaa4b);
        categoryMn.addSpan(0xaa7b, 0xaa7b);
        categoryMn.addSpan(0xaa7e, 0xaaaf);
        categoryMn.addSpan(0xaab1, 0xaab1);
        categoryMn.addSpan(0xaab5, 0xaab6);
        categoryMn.addSpan(0xaab9, 0xaabd);
        categoryMn.addSpan(0xaac0, 0xaac0);
        categoryMn.addSpan(0xaaeb, 0xaaeb);
        categoryMn.addSpan(0xaaf5, 0xaaf5);
        categoryMn.addSpan(0xabe3, 0xabe4);
        categoryMn.addSpan(0xabe6, 0xabe7);
        categoryMn.addSpan(0xabec, 0xabec);
        categoryMn.addSpan(0xfb1d, 0xfb1d);
        categoryMn.addSpan(0xfdfd, 0xfdfd);
        categoryMn.addSpan(0xfe19, 0xfe19);
        categoryMn.addSpan(0x0001018c, 0x000101fc);
        categoryMn.addSpan(0x00010280, 0x000102d0);
        categoryMn.addSpan(0x00010350, 0x00010375);
        categoryMn.addSpan(0x00010a00, 0x00010a00);
        categoryMn.addSpan(0x00010a10, 0x00010a33);
        categoryMn.addSpan(0x00010ac9, 0x00010ae4);
        categoryMn.addSpan(0x00011000, 0x00011000);
        categoryMn.addSpan(0x00011003, 0x00011037);
        categoryMn.addSpan(0x00011066, 0x0001106f);
        categoryMn.addSpan(0x000110b0, 0x000110b2);
        categoryMn.addSpan(0x000110b7, 0x000110b8);
        categoryMn.addSpan(0x000110f0, 0x000110f9);
        categoryMn.addSpan(0x00011103, 0x00011126);
        categoryMn.addSpan(0x0001112c, 0x0001112c);
        categoryMn.addSpan(0x00011150, 0x00011172);
        categoryMn.addSpan(0x00011176, 0x00011176);
        categoryMn.addSpan(0x000111b3, 0x000111b5);
        categoryMn.addSpan(0x000111c5, 0x000111c9);
        categoryMn.addSpan(0x0001122c, 0x0001122e);
        categoryMn.addSpan(0x00011232, 0x00011233);
        categoryMn.addSpan(0x00011235, 0x00011235);
        categoryMn.addSpan(0x00011238, 0x0001123d);
        categoryMn.addSpan(0x000112b0, 0x000112de);
        categoryMn.addSpan(0x000112e0, 0x000112e2);
        categoryMn.addSpan(0x000112f0, 0x000112f9);
        categoryMn.addSpan(0x00011305, 0x00011339);
        categoryMn.addSpan(0x0001133e, 0x0001133f);
        categoryMn.addSpan(0x00011362, 0x00011363);
        categoryMn.addSpan(0x00011435, 0x00011437);
        categoryMn.addSpan(0x00011440, 0x00011441);
        categoryMn.addSpan(0x00011445, 0x00011445);
        categoryMn.addSpan(0x000114b0, 0x000114b2);
        categoryMn.addSpan(0x000114b9, 0x000114b9);
        categoryMn.addSpan(0x000114bb, 0x000114be);
        categoryMn.addSpan(0x000114c1, 0x000114c1);
        categoryMn.addSpan(0x000115af, 0x000115b1);
        categoryMn.addSpan(0x000115b8, 0x000115bb);
        categoryMn.addSpan(0x000115be, 0x000115be);
        categoryMn.addSpan(0x000115d8, 0x000115db);
        categoryMn.addSpan(0x00011630, 0x00011632);
        categoryMn.addSpan(0x0001163b, 0x0001163c);
        categoryMn.addSpan(0x0001163e, 0x0001163e);
        categoryMn.addSpan(0x00011680, 0x000116aa);
        categoryMn.addSpan(0x000116ac, 0x000116ac);
        categoryMn.addSpan(0x000116ae, 0x000116af);
        categoryMn.addSpan(0x000116b6, 0x000116b6);
        categoryMn.addSpan(0x00011700, 0x00011719);
        categoryMn.addSpan(0x00011720, 0x00011721);
        categoryMn.addSpan(0x00011726, 0x00011726);
        categoryMn.addSpan(0x000118ff, 0x00011a00);
        categoryMn.addSpan(0x00011a07, 0x00011a08);
        categoryMn.addSpan(0x00011a0b, 0x00011a32);
        categoryMn.addSpan(0x00011a3a, 0x00011a3a);
        categoryMn.addSpan(0x00011a3f, 0x00011a46);
        categoryMn.addSpan(0x00011a50, 0x00011a50);
        categoryMn.addSpan(0x00011a57, 0x00011a58);
        categoryMn.addSpan(0x00011a5c, 0x00011a89);
        categoryMn.addSpan(0x00011a97, 0x00011a97);
        categoryMn.addSpan(0x00011c2f, 0x00011c2f);
        categoryMn.addSpan(0x00011c3e, 0x00011c3e);
        categoryMn.addSpan(0x00011c72, 0x00011c8f);
        categoryMn.addSpan(0x00011ca9, 0x00011ca9);
        categoryMn.addSpan(0x00011cb1, 0x00011cb1);
        categoryMn.addSpan(0x00011cb4, 0x00011cb4);
        categoryMn.addSpan(0x00011d00, 0x00011d30);
        categoryMn.addSpan(0x00011d46, 0x00011d46);
        categoryMn.addSpan(0x00016ad0, 0x00016aed);
        categoryMn.addSpan(0x00016b00, 0x00016b2f);
        categoryMn.addSpan(0x00016f51, 0x00016f7e);
        categoryMn.addSpan(0x0001bc9c, 0x0001bc9c);
        categoryMn.addSpan(0x0001d165, 0x0001d166);
        categoryMn.addSpan(0x0001d173, 0x0001d17a);
        categoryMn.addSpan(0x0001d183, 0x0001d184);
        categoryMn.addSpan(0x0001d18c, 0x0001d1a9);
        categoryMn.addSpan(0x0001d1ae, 0x0001d241);
        categoryMn.addSpan(0x0001d800, 0x0001d9ff);
        categoryMn.addSpan(0x0001da37, 0x0001da3a);
        categoryMn.addSpan(0x0001da6d, 0x0001da74);
        categoryMn.addSpan(0x0001da76, 0x0001da83);
        categoryMn.addSpan(0x0001da87, 0x0001da8b);
        categoryMn.addSpan(0x0001e8c7, 0x0001e8cf);
        categoryMn.addSpan(0x0001e922, 0x0001e943);
        categoryMn.addSpan(0x000e0001, 0x000e007f);
        return categoryMn;
    }

    /**
     * The Unicode category Cf
     */
    private static UnicodeCategory categoryCf = null;

    /**
     * Gets the Unicode category Cf
     *
     * @return The Unicode category Cf
     */
    public static UnicodeCategory getCf() {
        if (categoryCf != null)
            return categoryCf;
        categoryCf = new UnicodeCategory("Cf");
        categoryCf.addSpan(0x00ac, 0x00ac);
        categoryCf.addSpan(0x05f3, 0x05f4);
        categoryCf.addSpan(0x061b, 0x061b);
        categoryCf.addSpan(0x06d6, 0x06dc);
        categoryCf.addSpan(0x0700, 0x070d);
        categoryCf.addSpan(0x08d4, 0x08e1);
        categoryCf.addSpan(0x180b, 0x180d);
        categoryCf.addSpan(0x2000, 0x200a);
        categoryCf.addSpan(0x2029, 0x2029);
        categoryCf.addSpan(0x205f, 0x205f);
        categoryCf.addSpan(0xfe70, 0xfefc);
        categoryCf.addSpan(0xffed, 0xffee);
        categoryCf.addSpan(0x000110bb, 0x000110bc);
        categoryCf.addSpan(0x0001bc9f, 0x0001bc9f);
        categoryCf.addSpan(0x0001d16d, 0x0001d172);
        categoryCf.addSpan(0x00020000, 0x0002fa1d);
        return categoryCf;
    }

    /**
     * The Unicode category Co
     */
    private static UnicodeCategory categoryCo = null;

    /**
     * Gets the Unicode category Co
     *
     * @return The Unicode category Co
     */
    public static UnicodeCategory getCo() {
        if (categoryCo != null)
            return categoryCo;
        categoryCo = new UnicodeCategory("Co");
        categoryCo.addSpan(0x000e0100, 0x000e01ef);
        categoryCo.addSpan(0x000f0000, 0x0010fffd);
        return categoryCo;
    }

    /**
     * The Unicode category Cs
     */
    private static UnicodeCategory categoryCs = null;

    /**
     * Gets the Unicode category Cs
     *
     * @return The Unicode category Cs
     */
    public static UnicodeCategory getCs() {
        if (categoryCs != null)
            return categoryCs;
        categoryCs = new UnicodeCategory("Cs");
        categoryCs.addSpan(0xac00, 0xd7fb);
        return categoryCs;
    }

    /**
     * The Unicode category Zl
     */
    private static UnicodeCategory categoryZl = null;

    /**
     * Gets the Unicode category Zl
     *
     * @return The Unicode category Zl
     */
    public static UnicodeCategory getZl() {
        if (categoryZl != null)
            return categoryZl;
        categoryZl = new UnicodeCategory("Zl");
        categoryZl.addSpan(0x2020, 0x2027);
        return categoryZl;
    }

    /**
     * The Unicode category Pc
     */
    private static UnicodeCategory categoryPc = null;

    /**
     * Gets the Unicode category Pc
     *
     * @return The Unicode category Pc
     */
    public static UnicodeCategory getPc() {
        if (categoryPc != null)
            return categoryPc;
        categoryPc = new UnicodeCategory("Pc");
        categoryPc.addSpan(0x005e, 0x005e);
        categoryPc.addSpan(0x203b, 0x203e);
        categoryPc.addSpan(0x2053, 0x2053);
        categoryPc.addSpan(0xfe31, 0xfe32);
        categoryPc.addSpan(0xfe49, 0xfe4c);
        categoryPc.addSpan(0xff3e, 0xff3e);
        return categoryPc;
    }

    /**
     * The Unicode category Pd
     */
    private static UnicodeCategory categoryPd = null;

    /**
     * Gets the Unicode category Pd
     *
     * @return The Unicode category Pd
     */
    public static UnicodeCategory getPd() {
        if (categoryPd != null)
            return categoryPd;
        categoryPd = new UnicodeCategory("Pd");
        categoryPd.addSpan(0x002c, 0x002c);
        categoryPd.addSpan(0x0589, 0x0589);
        categoryPd.addSpan(0x0591, 0x05bd);
        categoryPd.addSpan(0x13f8, 0x13fd);
        categoryPd.addSpan(0x1800, 0x1805);
        categoryPd.addSpan(0x200b, 0x200f);
        categoryPd.addSpan(0x2e0e, 0x2e16);
        categoryPd.addSpan(0x2e18, 0x2e19);
        categoryPd.addSpan(0x2e30, 0x2e39);
        categoryPd.addSpan(0x2e3c, 0x2e3f);
        categoryPd.addSpan(0x301b, 0x301b);
        categoryPd.addSpan(0x302e, 0x302f);
        categoryPd.addSpan(0x309f, 0x309f);
        categoryPd.addSpan(0xfe30, 0xfe30);
        categoryPd.addSpan(0xfe50, 0xfe57);
        categoryPd.addSpan(0xfe62, 0xfe62);
        categoryPd.addSpan(0xff0c, 0xff0c);
        return categoryPd;
    }

    /**
     * The Unicode category Pe
     */
    private static UnicodeCategory categoryPe = null;

    /**
     * Gets the Unicode category Pe
     *
     * @return The Unicode category Pe
     */
    public static UnicodeCategory getPe() {
        if (categoryPe != null)
            return categoryPe;
        categoryPe = new UnicodeCategory("Pe");
        categoryPe.addSpan(0x0028, 0x0028);
        categoryPe.addSpan(0x005c, 0x005c);
        categoryPe.addSpan(0x007c, 0x007c);
        categoryPe.addSpan(0x0f3a, 0x0f3a);
        categoryPe.addSpan(0x0f3c, 0x0f3c);
        categoryPe.addSpan(0x169b, 0x169b);
        categoryPe.addSpan(0x2045, 0x2045);
        categoryPe.addSpan(0x207d, 0x207d);
        categoryPe.addSpan(0x208d, 0x208d);
        categoryPe.addSpan(0x2308, 0x2308);
        categoryPe.addSpan(0x230a, 0x230a);
        categoryPe.addSpan(0x2329, 0x2329);
        categoryPe.addSpan(0x2768, 0x2768);
        categoryPe.addSpan(0x276a, 0x276a);
        categoryPe.addSpan(0x276c, 0x276c);
        categoryPe.addSpan(0x276e, 0x276e);
        categoryPe.addSpan(0x2770, 0x2770);
        categoryPe.addSpan(0x2772, 0x2772);
        categoryPe.addSpan(0x2774, 0x2774);
        categoryPe.addSpan(0x27c5, 0x27c5);
        categoryPe.addSpan(0x27e6, 0x27e6);
        categoryPe.addSpan(0x27e8, 0x27e8);
        categoryPe.addSpan(0x27ea, 0x27ea);
        categoryPe.addSpan(0x27ec, 0x27ec);
        categoryPe.addSpan(0x27ee, 0x27ee);
        categoryPe.addSpan(0x2983, 0x2983);
        categoryPe.addSpan(0x2985, 0x2985);
        categoryPe.addSpan(0x2987, 0x2987);
        categoryPe.addSpan(0x2989, 0x2989);
        categoryPe.addSpan(0x298b, 0x298b);
        categoryPe.addSpan(0x298d, 0x298d);
        categoryPe.addSpan(0x298f, 0x298f);
        categoryPe.addSpan(0x2991, 0x2991);
        categoryPe.addSpan(0x2993, 0x2993);
        categoryPe.addSpan(0x2995, 0x2995);
        categoryPe.addSpan(0x2997, 0x2997);
        categoryPe.addSpan(0x29d8, 0x29d8);
        categoryPe.addSpan(0x29da, 0x29da);
        categoryPe.addSpan(0x29fc, 0x29fc);
        categoryPe.addSpan(0x2e22, 0x2e22);
        categoryPe.addSpan(0x2e24, 0x2e24);
        categoryPe.addSpan(0x2e26, 0x2e26);
        categoryPe.addSpan(0x2e28, 0x2e28);
        categoryPe.addSpan(0x3008, 0x3008);
        categoryPe.addSpan(0x300a, 0x300a);
        categoryPe.addSpan(0x300c, 0x300c);
        categoryPe.addSpan(0x300e, 0x300e);
        categoryPe.addSpan(0x3010, 0x3010);
        categoryPe.addSpan(0x3014, 0x3014);
        categoryPe.addSpan(0x3016, 0x3016);
        categoryPe.addSpan(0x3018, 0x3018);
        categoryPe.addSpan(0x301a, 0x301a);
        categoryPe.addSpan(0x301d, 0x301d);
        categoryPe.addSpan(0xfbd3, 0xfd3d);
        categoryPe.addSpan(0xfe17, 0xfe17);
        categoryPe.addSpan(0xfe35, 0xfe35);
        categoryPe.addSpan(0xfe37, 0xfe37);
        categoryPe.addSpan(0xfe39, 0xfe39);
        categoryPe.addSpan(0xfe3b, 0xfe3b);
        categoryPe.addSpan(0xfe3d, 0xfe3d);
        categoryPe.addSpan(0xfe3f, 0xfe3f);
        categoryPe.addSpan(0xfe41, 0xfe41);
        categoryPe.addSpan(0xfe43, 0xfe43);
        categoryPe.addSpan(0xfe47, 0xfe47);
        categoryPe.addSpan(0xfe59, 0xfe59);
        categoryPe.addSpan(0xfe5b, 0xfe5b);
        categoryPe.addSpan(0xfe5d, 0xfe5d);
        categoryPe.addSpan(0xff08, 0xff08);
        categoryPe.addSpan(0xff3c, 0xff3c);
        categoryPe.addSpan(0xff5c, 0xff5c);
        categoryPe.addSpan(0xff5f, 0xff5f);
        categoryPe.addSpan(0xff62, 0xff62);
        return categoryPe;
    }

    /**
     * The Unicode category Nd
     */
    private static UnicodeCategory categoryNd = null;

    /**
     * Gets the Unicode category Nd
     *
     * @return The Unicode category Nd
     */
    public static UnicodeCategory getNd() {
        if (categoryNd != null)
            return categoryNd;
        categoryNd = new UnicodeCategory("Nd");
        categoryNd.addSpan(0x002e, 0x002f);
        categoryNd.addSpan(0x064b, 0x065f);
        categoryNd.addSpan(0x06ee, 0x06ef);
        categoryNd.addSpan(0x07b1, 0x07b1);
        categoryNd.addSpan(0x0964, 0x0965);
        categoryNd.addSpan(0x09e2, 0x09e3);
        categoryNd.addSpan(0x0a59, 0x0a5e);
        categoryNd.addSpan(0x0ae2, 0x0ae3);
        categoryNd.addSpan(0x0b62, 0x0b63);
        categoryNd.addSpan(0x0bd7, 0x0bd7);
        categoryNd.addSpan(0x0c62, 0x0c63);
        categoryNd.addSpan(0x0ce2, 0x0ce3);
        categoryNd.addSpan(0x0d62, 0x0d63);
        categoryNd.addSpan(0x0dd8, 0x0ddf);
        categoryNd.addSpan(0x0e4f, 0x0e4f);
        categoryNd.addSpan(0x0ec8, 0x0ecd);
        categoryNd.addSpan(0x0f1a, 0x0f1f);
        categoryNd.addSpan(0x103f, 0x103f);
        categoryNd.addSpan(0x108f, 0x108f);
        categoryNd.addSpan(0x17dd, 0x17dd);
        categoryNd.addSpan(0x180e, 0x180e);
        categoryNd.addSpan(0x1944, 0x1945);
        categoryNd.addSpan(0x1950, 0x19c9);
        categoryNd.addSpan(0x1a73, 0x1a7f);
        categoryNd.addSpan(0x1b45, 0x1b4b);
        categoryNd.addSpan(0x1bae, 0x1baf);
        categoryNd.addSpan(0x1c3b, 0x1c3f);
        categoryNd.addSpan(0x1c4d, 0x1c4f);
        categoryNd.addSpan(0xa610, 0xa61f);
        categoryNd.addSpan(0xa8ce, 0xa8cf);
        categoryNd.addSpan(0xa8fd, 0xa8fd);
        categoryNd.addSpan(0xa9cf, 0xa9cf);
        categoryNd.addSpan(0xa9e7, 0xa9ef);
        categoryNd.addSpan(0xaa4d, 0xaa4d);
        categoryNd.addSpan(0xabed, 0xabed);
        categoryNd.addSpan(0xff0e, 0xff0f);
        categoryNd.addSpan(0x00010450, 0x0001049d);
        categoryNd.addSpan(0x00011052, 0x00011065);
        categoryNd.addSpan(0x000110d0, 0x000110e8);
        categoryNd.addSpan(0x0001112d, 0x00011134);
        categoryNd.addSpan(0x000111cd, 0x000111cd);
        categoryNd.addSpan(0x000112e3, 0x000112ea);
        categoryNd.addSpan(0x0001144b, 0x0001144f);
        categoryNd.addSpan(0x000114c7, 0x000114c7);
        categoryNd.addSpan(0x00011644, 0x00011644);
        categoryNd.addSpan(0x000116b7, 0x000116b7);
        categoryNd.addSpan(0x00011727, 0x0001172b);
        categoryNd.addSpan(0x000118c0, 0x000118df);
        categoryNd.addSpan(0x00011c41, 0x00011c45);
        categoryNd.addSpan(0x00011d47, 0x00011d47);
        categoryNd.addSpan(0x00012480, 0x00016a5e);
        categoryNd.addSpan(0x00016b45, 0x00016b45);
        categoryNd.addSpan(0x0001d7cb, 0x0001d7cb);
        categoryNd.addSpan(0x0001e944, 0x0001e94a);
        return categoryNd;
    }

    /**
     * The Unicode category Pf
     */
    private static UnicodeCategory categoryPf = null;

    /**
     * Gets the Unicode category Pf
     *
     * @return The Unicode category Pf
     */
    public static UnicodeCategory getPf() {
        if (categoryPf != null)
            return categoryPf;
        categoryPf = new UnicodeCategory("Pf");
        categoryPf.addSpan(0x00ba, 0x00ba);
        categoryPf.addSpan(0x2018, 0x2018);
        categoryPf.addSpan(0x201b, 0x201c);
        categoryPf.addSpan(0x2039, 0x2039);
        categoryPf.addSpan(0x2e02, 0x2e02);
        categoryPf.addSpan(0x2e04, 0x2e04);
        categoryPf.addSpan(0x2e09, 0x2e09);
        categoryPf.addSpan(0x2e0c, 0x2e0c);
        categoryPf.addSpan(0x2e1c, 0x2e1c);
        categoryPf.addSpan(0x2e20, 0x2e20);
        return categoryPf;
    }

    /**
     * The Unicode category Zp
     */
    private static UnicodeCategory categoryZp = null;

    /**
     * Gets the Unicode category Zp
     *
     * @return The Unicode category Zp
     */
    public static UnicodeCategory getZp() {
        if (categoryZp != null)
            return categoryZp;
        categoryZp = new UnicodeCategory("Zp");
        categoryZp.addSpan(0x2028, 0x2028);
        return categoryZp;
    }

    /**
     * The Unicode category Zs
     */
    private static UnicodeCategory categoryZs = null;

    /**
     * Gets the Unicode category Zs
     *
     * @return The Unicode category Zs
     */
    public static UnicodeCategory getZs() {
        if (categoryZs != null)
            return categoryZs;
        categoryZs = new UnicodeCategory("Zs");
        categoryZs.addSpan(0x0000, 0x001f);
        categoryZs.addSpan(0x007f, 0x009f);
        categoryZs.addSpan(0x166f, 0x167f);
        categoryZs.addSpan(0x1ffd, 0x1ffe);
        categoryZs.addSpan(0x202a, 0x202e);
        categoryZs.addSpan(0x2055, 0x205e);
        categoryZs.addSpan(0x2e80, 0x2ffb);
        return categoryZs;
    }

    /**
     * The Unicode category Pi
     */
    private static UnicodeCategory categoryPi = null;

    /**
     * Gets the Unicode category Pi
     *
     * @return The Unicode category Pi
     */
    public static UnicodeCategory getPi() {
        if (categoryPi != null)
            return categoryPi;
        categoryPi = new UnicodeCategory("Pi");
        categoryPi.addSpan(0x00aa, 0x00aa);
        categoryPi.addSpan(0x2016, 0x2017);
        categoryPi.addSpan(0x201a, 0x201a);
        categoryPi.addSpan(0x201e, 0x201e);
        categoryPi.addSpan(0x2030, 0x2038);
        categoryPi.addSpan(0x2e00, 0x2e01);
        categoryPi.addSpan(0x2e03, 0x2e03);
        categoryPi.addSpan(0x2e06, 0x2e08);
        categoryPi.addSpan(0x2e0b, 0x2e0b);
        categoryPi.addSpan(0x2e1b, 0x2e1b);
        categoryPi.addSpan(0x2e1e, 0x2e1f);
        return categoryPi;
    }

    /**
     * The Unicode category Nl
     */
    private static UnicodeCategory categoryNl = null;

    /**
     * Gets the Unicode category Nl
     *
     * @return The Unicode category Nl
     */
    public static UnicodeCategory getNl() {
        if (categoryNl != null)
            return categoryNl;
        categoryNl = new UnicodeCategory("Nl");
        categoryNl.addSpan(0x16eb, 0x16ed);
        categoryNl.addSpan(0x2150, 0x215f);
        categoryNl.addSpan(0x2184, 0x2184);
        categoryNl.addSpan(0x3006, 0x3006);
        categoryNl.addSpan(0x3020, 0x3020);
        categoryNl.addSpan(0x3036, 0x3037);
        categoryNl.addSpan(0xa6a0, 0xa6e5);
        categoryNl.addSpan(0x00010137, 0x0001013f);
        categoryNl.addSpan(0x0001032d, 0x00010340);
        categoryNl.addSpan(0x00010342, 0x00010349);
        categoryNl.addSpan(0x000103d0, 0x000103d0);
        categoryNl.addSpan(0x00012000, 0x00012399);
        return categoryNl;
    }

    /**
     * The Unicode category Po
     */
    private static UnicodeCategory categoryPo = null;

    /**
     * Gets the Unicode category Po
     *
     * @return The Unicode category Po
     */
    public static UnicodeCategory getPo() {
        if (categoryPo != null)
            return categoryPo;
        categoryPo = new UnicodeCategory("Po");
        categoryPo.addSpan(0x0020, 0x0020);
        categoryPo.addSpan(0x0024, 0x0024);
        categoryPo.addSpan(0x0029, 0x0029);
        categoryPo.addSpan(0x002b, 0x002b);
        categoryPo.addSpan(0x002d, 0x002d);
        categoryPo.addSpan(0x0030, 0x0039);
        categoryPo.addSpan(0x003c, 0x003e);
        categoryPo.addSpan(0x005b, 0x005b);
        categoryPo.addSpan(0x00a0, 0x00a0);
        categoryPo.addSpan(0x00a6, 0x00a6);
        categoryPo.addSpan(0x00b5, 0x00b5);
        categoryPo.addSpan(0x00bc, 0x00be);
        categoryPo.addSpan(0x037b, 0x037d);
        categoryPo.addSpan(0x0386, 0x0386);
        categoryPo.addSpan(0x0559, 0x0559);
        categoryPo.addSpan(0x0561, 0x0587);
        categoryPo.addSpan(0x05bf, 0x05bf);
        categoryPo.addSpan(0x05c1, 0x05c2);
        categoryPo.addSpan(0x05c4, 0x05c5);
        categoryPo.addSpan(0x05d0, 0x05f2);
        categoryPo.addSpan(0x0606, 0x0608);
        categoryPo.addSpan(0x060b, 0x060b);
        categoryPo.addSpan(0x0610, 0x061a);
        categoryPo.addSpan(0x061c, 0x061c);
        categoryPo.addSpan(0x0660, 0x0669);
        categoryPo.addSpan(0x0671, 0x06d3);
        categoryPo.addSpan(0x06ff, 0x06ff);
        categoryPo.addSpan(0x07f6, 0x07f6);
        categoryPo.addSpan(0x0829, 0x082d);
        categoryPo.addSpan(0x0859, 0x085b);
        categoryPo.addSpan(0x0962, 0x0963);
        categoryPo.addSpan(0x0966, 0x096f);
        categoryPo.addSpan(0x09fc, 0x09fc);
        categoryPo.addSpan(0x0ae6, 0x0aef);
        categoryPo.addSpan(0x0df2, 0x0df3);
        categoryPo.addSpan(0x0e47, 0x0e4e);
        categoryPo.addSpan(0x0e50, 0x0e59);
        categoryPo.addSpan(0x0f01, 0x0f03);
        categoryPo.addSpan(0x0f13, 0x0f13);
        categoryPo.addSpan(0x0f80, 0x0f84);
        categoryPo.addSpan(0x0fc7, 0x0fcf);
        categoryPo.addSpan(0x0fd5, 0x0fd8);
        categoryPo.addSpan(0x1040, 0x1049);
        categoryPo.addSpan(0x10d0, 0x10fa);
        categoryPo.addSpan(0x135d, 0x135f);
        categoryPo.addSpan(0x1401, 0x166c);
        categoryPo.addSpan(0x16a0, 0x16ea);
        categoryPo.addSpan(0x1732, 0x1734);
        categoryPo.addSpan(0x17c9, 0x17d3);
        categoryPo.addSpan(0x17d7, 0x17d7);
        categoryPo.addSpan(0x17f0, 0x17f9);
        categoryPo.addSpan(0x1806, 0x1806);
        categoryPo.addSpan(0x1940, 0x1940);
        categoryPo.addSpan(0x1a1b, 0x1a1b);
        categoryPo.addSpan(0x1a80, 0x1a99);
        categoryPo.addSpan(0x1aa7, 0x1aa7);
        categoryPo.addSpan(0x1b50, 0x1b59);
        categoryPo.addSpan(0x1bf2, 0x1bf3);
        categoryPo.addSpan(0x1c36, 0x1c37);
        categoryPo.addSpan(0x1c78, 0x1c7d);
        categoryPo.addSpan(0x1c80, 0x1c88);
        categoryPo.addSpan(0x1cd0, 0x1cd2);
        categoryPo.addSpan(0x2010, 0x2015);
        categoryPo.addSpan(0x201f, 0x201f);
        categoryPo.addSpan(0x202f, 0x202f);
        categoryPo.addSpan(0x203a, 0x203a);
        categoryPo.addSpan(0x203f, 0x2040);
        categoryPo.addSpan(0x2046, 0x2046);
        categoryPo.addSpan(0x2052, 0x2052);
        categoryPo.addSpan(0x2054, 0x2054);
        categoryPo.addSpan(0x2cf3, 0x2cf3);
        categoryPo.addSpan(0x2cfd, 0x2cfd);
        categoryPo.addSpan(0x2d6f, 0x2d6f);
        categoryPo.addSpan(0x2de0, 0x2dff);
        categoryPo.addSpan(0x2e05, 0x2e05);
        categoryPo.addSpan(0x2e0a, 0x2e0a);
        categoryPo.addSpan(0x2e0d, 0x2e0d);
        categoryPo.addSpan(0x2e17, 0x2e17);
        categoryPo.addSpan(0x2e1a, 0x2e1a);
        categoryPo.addSpan(0x2e1d, 0x2e1d);
        categoryPo.addSpan(0x2e29, 0x2e29);
        categoryPo.addSpan(0x2e2f, 0x2e2f);
        categoryPo.addSpan(0x2e3a, 0x2e3b);
        categoryPo.addSpan(0x2e40, 0x2e40);
        categoryPo.addSpan(0x2e42, 0x2e42);
        categoryPo.addSpan(0x3000, 0x3000);
        categoryPo.addSpan(0x303c, 0x303c);
        categoryPo.addSpan(0x30a1, 0x30fa);
        categoryPo.addSpan(0xa4f8, 0xa4fd);
        categoryPo.addSpan(0xa60c, 0xa60c);
        categoryPo.addSpan(0xa670, 0xa672);
        categoryPo.addSpan(0xa674, 0xa67d);
        categoryPo.addSpan(0xa6f0, 0xa6f1);
        categoryPo.addSpan(0xa840, 0xa873);
        categoryPo.addSpan(0xa8c4, 0xa8c5);
        categoryPo.addSpan(0xa8f2, 0xa8f7);
        categoryPo.addSpan(0xa8fb, 0xa8fb);
        categoryPo.addSpan(0xa926, 0xa92d);
        categoryPo.addSpan(0xa952, 0xa953);
        categoryPo.addSpan(0xa9bd, 0xa9c0);
        categoryPo.addSpan(0xa9d0, 0xa9d9);
        categoryPo.addSpan(0xaa50, 0xaa59);
        categoryPo.addSpan(0xaadd, 0xaadd);
        categoryPo.addSpan(0xaaee, 0xaaef);
        categoryPo.addSpan(0xabe9, 0xabea);
        categoryPo.addSpan(0xfe00, 0xfe0f);
        categoryPo.addSpan(0xfe18, 0xfe18);
        categoryPo.addSpan(0xfe20, 0xfe2f);
        categoryPo.addSpan(0xfe44, 0xfe44);
        categoryPo.addSpan(0xfe48, 0xfe48);
        categoryPo.addSpan(0xfe4d, 0xfe4f);
        categoryPo.addSpan(0xfe5e, 0xfe5e);
        categoryPo.addSpan(0xfe64, 0xfe66);
        categoryPo.addSpan(0xfe69, 0xfe69);
        categoryPo.addSpan(0xfeff, 0xfeff);
        categoryPo.addSpan(0xff04, 0xff04);
        categoryPo.addSpan(0xff09, 0xff09);
        categoryPo.addSpan(0xff0b, 0xff0b);
        categoryPo.addSpan(0xff0d, 0xff0d);
        categoryPo.addSpan(0xff10, 0xff19);
        categoryPo.addSpan(0xff1c, 0xff1e);
        categoryPo.addSpan(0xff3b, 0xff3b);
        categoryPo.addSpan(0xff60, 0xff60);
        categoryPo.addSpan(0xff63, 0xff63);
        categoryPo.addSpan(0x00010000, 0x000100fa);
        categoryPo.addSpan(0x00010380, 0x0001039d);
        categoryPo.addSpan(0x000103a0, 0x000103cf);
        categoryPo.addSpan(0x00010500, 0x00010563);
        categoryPo.addSpan(0x00010600, 0x00010855);
        categoryPo.addSpan(0x00010916, 0x0001091b);
        categoryPo.addSpan(0x00010920, 0x00010939);
        categoryPo.addSpan(0x00010a40, 0x00010a47);
        categoryPo.addSpan(0x00010a7d, 0x00010a7e);
        categoryPo.addSpan(0x00010aeb, 0x00010aef);
        categoryPo.addSpan(0x00010b00, 0x00010b35);
        categoryPo.addSpan(0x00010b80, 0x00010b91);
        categoryPo.addSpan(0x00011038, 0x00011046);
        categoryPo.addSpan(0x000110b9, 0x000110ba);
        categoryPo.addSpan(0x000110bd, 0x000110bd);
        categoryPo.addSpan(0x00011136, 0x0001113f);
        categoryPo.addSpan(0x00011173, 0x00011173);
        categoryPo.addSpan(0x000111c1, 0x000111c4);
        categoryPo.addSpan(0x000111ca, 0x000111cc);
        categoryPo.addSpan(0x000111da, 0x000111da);
        categoryPo.addSpan(0x000111dc, 0x000111dc);
        categoryPo.addSpan(0x00011236, 0x00011237);
        categoryPo.addSpan(0x00011280, 0x000112a8);
        categoryPo.addSpan(0x00011447, 0x0001144a);
        categoryPo.addSpan(0x00011450, 0x00011459);
        categoryPo.addSpan(0x000114c4, 0x000114c5);
        categoryPo.addSpan(0x000115bf, 0x000115c0);
        categoryPo.addSpan(0x0001163f, 0x00011640);
        categoryPo.addSpan(0x00011650, 0x00011659);
        categoryPo.addSpan(0x0001173a, 0x0001173b);
        categoryPo.addSpan(0x00011a3b, 0x00011a3e);
        categoryPo.addSpan(0x00011a98, 0x00011a99);
        categoryPo.addSpan(0x00011c40, 0x00011c40);
        categoryPo.addSpan(0x00011c5a, 0x00011c6c);
        categoryPo.addSpan(0x00012400, 0x0001246e);
        categoryPo.addSpan(0x00016a60, 0x00016a69);
        categoryPo.addSpan(0x00016af0, 0x00016af4);
        categoryPo.addSpan(0x00016b30, 0x00016b36);
        categoryPo.addSpan(0x00016b40, 0x00016b43);
        categoryPo.addSpan(0x0001bc9d, 0x0001bc9e);
        categoryPo.addSpan(0x0001da85, 0x0001da86);
        categoryPo.addSpan(0x0001e950, 0x0001e959);
        return categoryPo;
    }

    /**
     * The Unicode category Ll
     */
    private static UnicodeCategory categoryLl = null;

    /**
     * Gets the Unicode category Ll
     *
     * @return The Unicode category Ll
     */
    public static UnicodeCategory getLl() {
        if (categoryLl != null)
            return categoryLl;
        categoryLl = new UnicodeCategory("Ll");
        categoryLl.addSpan(0x0060, 0x0060);
        categoryLl.addSpan(0x00b4, 0x00b4);
        categoryLl.addSpan(0x00d8, 0x00de);
        categoryLl.addSpan(0x00f7, 0x00f7);
        categoryLl.addSpan(0x0100, 0x0100);
        categoryLl.addSpan(0x0102, 0x0102);
        categoryLl.addSpan(0x0104, 0x0104);
        categoryLl.addSpan(0x0106, 0x0106);
        categoryLl.addSpan(0x0108, 0x0108);
        categoryLl.addSpan(0x010a, 0x010a);
        categoryLl.addSpan(0x010c, 0x010c);
        categoryLl.addSpan(0x010e, 0x010e);
        categoryLl.addSpan(0x0110, 0x0110);
        categoryLl.addSpan(0x0112, 0x0112);
        categoryLl.addSpan(0x0114, 0x0114);
        categoryLl.addSpan(0x0116, 0x0116);
        categoryLl.addSpan(0x0118, 0x0118);
        categoryLl.addSpan(0x011a, 0x011a);
        categoryLl.addSpan(0x011c, 0x011c);
        categoryLl.addSpan(0x011e, 0x011e);
        categoryLl.addSpan(0x0120, 0x0120);
        categoryLl.addSpan(0x0122, 0x0122);
        categoryLl.addSpan(0x0124, 0x0124);
        categoryLl.addSpan(0x0126, 0x0126);
        categoryLl.addSpan(0x0128, 0x0128);
        categoryLl.addSpan(0x012a, 0x012a);
        categoryLl.addSpan(0x012c, 0x012c);
        categoryLl.addSpan(0x012e, 0x012e);
        categoryLl.addSpan(0x0130, 0x0130);
        categoryLl.addSpan(0x0132, 0x0132);
        categoryLl.addSpan(0x0134, 0x0134);
        categoryLl.addSpan(0x0136, 0x0136);
        categoryLl.addSpan(0x0139, 0x0139);
        categoryLl.addSpan(0x013b, 0x013b);
        categoryLl.addSpan(0x013d, 0x013d);
        categoryLl.addSpan(0x013f, 0x013f);
        categoryLl.addSpan(0x0141, 0x0141);
        categoryLl.addSpan(0x0143, 0x0143);
        categoryLl.addSpan(0x0145, 0x0145);
        categoryLl.addSpan(0x0147, 0x0147);
        categoryLl.addSpan(0x014a, 0x014a);
        categoryLl.addSpan(0x014c, 0x014c);
        categoryLl.addSpan(0x014e, 0x014e);
        categoryLl.addSpan(0x0150, 0x0150);
        categoryLl.addSpan(0x0152, 0x0152);
        categoryLl.addSpan(0x0154, 0x0154);
        categoryLl.addSpan(0x0156, 0x0156);
        categoryLl.addSpan(0x0158, 0x0158);
        categoryLl.addSpan(0x015a, 0x015a);
        categoryLl.addSpan(0x015c, 0x015c);
        categoryLl.addSpan(0x015e, 0x015e);
        categoryLl.addSpan(0x0160, 0x0160);
        categoryLl.addSpan(0x0162, 0x0162);
        categoryLl.addSpan(0x0164, 0x0164);
        categoryLl.addSpan(0x0166, 0x0166);
        categoryLl.addSpan(0x0168, 0x0168);
        categoryLl.addSpan(0x016a, 0x016a);
        categoryLl.addSpan(0x016c, 0x016c);
        categoryLl.addSpan(0x016e, 0x016e);
        categoryLl.addSpan(0x0170, 0x0170);
        categoryLl.addSpan(0x0172, 0x0172);
        categoryLl.addSpan(0x0174, 0x0174);
        categoryLl.addSpan(0x0176, 0x0176);
        categoryLl.addSpan(0x0178, 0x0179);
        categoryLl.addSpan(0x017b, 0x017b);
        categoryLl.addSpan(0x017d, 0x017d);
        categoryLl.addSpan(0x0181, 0x0182);
        categoryLl.addSpan(0x0184, 0x0184);
        categoryLl.addSpan(0x0186, 0x0187);
        categoryLl.addSpan(0x0189, 0x018b);
        categoryLl.addSpan(0x018e, 0x0191);
        categoryLl.addSpan(0x0193, 0x0194);
        categoryLl.addSpan(0x0196, 0x0198);
        categoryLl.addSpan(0x019c, 0x019d);
        categoryLl.addSpan(0x019f, 0x01a0);
        categoryLl.addSpan(0x01a2, 0x01a2);
        categoryLl.addSpan(0x01a4, 0x01a4);
        categoryLl.addSpan(0x01a6, 0x01a7);
        categoryLl.addSpan(0x01a9, 0x01a9);
        categoryLl.addSpan(0x01ac, 0x01ac);
        categoryLl.addSpan(0x01ae, 0x01af);
        categoryLl.addSpan(0x01b1, 0x01b3);
        categoryLl.addSpan(0x01b5, 0x01b5);
        categoryLl.addSpan(0x01b7, 0x01b8);
        categoryLl.addSpan(0x01bc, 0x01bc);
        categoryLl.addSpan(0x01c5, 0x01c5);
        categoryLl.addSpan(0x01c8, 0x01c8);
        categoryLl.addSpan(0x01cb, 0x01cb);
        categoryLl.addSpan(0x01cd, 0x01cd);
        categoryLl.addSpan(0x01cf, 0x01cf);
        categoryLl.addSpan(0x01d1, 0x01d1);
        categoryLl.addSpan(0x01d3, 0x01d3);
        categoryLl.addSpan(0x01d5, 0x01d5);
        categoryLl.addSpan(0x01d7, 0x01d7);
        categoryLl.addSpan(0x01d9, 0x01d9);
        categoryLl.addSpan(0x01db, 0x01db);
        categoryLl.addSpan(0x01de, 0x01de);
        categoryLl.addSpan(0x01e0, 0x01e0);
        categoryLl.addSpan(0x01e2, 0x01e2);
        categoryLl.addSpan(0x01e4, 0x01e4);
        categoryLl.addSpan(0x01e6, 0x01e6);
        categoryLl.addSpan(0x01e8, 0x01e8);
        categoryLl.addSpan(0x01ea, 0x01ea);
        categoryLl.addSpan(0x01ec, 0x01ec);
        categoryLl.addSpan(0x01ee, 0x01ee);
        categoryLl.addSpan(0x01f2, 0x01f2);
        categoryLl.addSpan(0x01f4, 0x01f4);
        categoryLl.addSpan(0x01f6, 0x01f8);
        categoryLl.addSpan(0x01fa, 0x01fa);
        categoryLl.addSpan(0x01fc, 0x01fc);
        categoryLl.addSpan(0x01fe, 0x01fe);
        categoryLl.addSpan(0x0200, 0x0200);
        categoryLl.addSpan(0x0202, 0x0202);
        categoryLl.addSpan(0x0204, 0x0204);
        categoryLl.addSpan(0x0206, 0x0206);
        categoryLl.addSpan(0x0208, 0x0208);
        categoryLl.addSpan(0x020a, 0x020a);
        categoryLl.addSpan(0x020c, 0x020c);
        categoryLl.addSpan(0x020e, 0x020e);
        categoryLl.addSpan(0x0210, 0x0210);
        categoryLl.addSpan(0x0212, 0x0212);
        categoryLl.addSpan(0x0214, 0x0214);
        categoryLl.addSpan(0x0216, 0x0216);
        categoryLl.addSpan(0x0218, 0x0218);
        categoryLl.addSpan(0x021a, 0x021a);
        categoryLl.addSpan(0x021c, 0x021c);
        categoryLl.addSpan(0x021e, 0x021e);
        categoryLl.addSpan(0x0220, 0x0220);
        categoryLl.addSpan(0x0222, 0x0222);
        categoryLl.addSpan(0x0224, 0x0224);
        categoryLl.addSpan(0x0226, 0x0226);
        categoryLl.addSpan(0x0228, 0x0228);
        categoryLl.addSpan(0x022a, 0x022a);
        categoryLl.addSpan(0x022c, 0x022c);
        categoryLl.addSpan(0x022e, 0x022e);
        categoryLl.addSpan(0x0230, 0x0230);
        categoryLl.addSpan(0x0232, 0x0232);
        categoryLl.addSpan(0x023a, 0x023b);
        categoryLl.addSpan(0x023d, 0x023e);
        categoryLl.addSpan(0x0241, 0x0241);
        categoryLl.addSpan(0x0243, 0x0246);
        categoryLl.addSpan(0x0248, 0x0248);
        categoryLl.addSpan(0x024a, 0x024a);
        categoryLl.addSpan(0x024c, 0x024c);
        categoryLl.addSpan(0x024e, 0x024e);
        categoryLl.addSpan(0x0294, 0x0294);
        categoryLl.addSpan(0x0370, 0x0370);
        categoryLl.addSpan(0x0372, 0x0372);
        categoryLl.addSpan(0x0376, 0x0376);
        categoryLl.addSpan(0x037a, 0x037a);
        categoryLl.addSpan(0x0388, 0x038f);
        categoryLl.addSpan(0x0391, 0x03ab);
        categoryLl.addSpan(0x03cf, 0x03cf);
        categoryLl.addSpan(0x03d2, 0x03d4);
        categoryLl.addSpan(0x03d8, 0x03d8);
        categoryLl.addSpan(0x03da, 0x03da);
        categoryLl.addSpan(0x03dc, 0x03dc);
        categoryLl.addSpan(0x03de, 0x03de);
        categoryLl.addSpan(0x03e0, 0x03e0);
        categoryLl.addSpan(0x03e2, 0x03e2);
        categoryLl.addSpan(0x03e4, 0x03e4);
        categoryLl.addSpan(0x03e6, 0x03e6);
        categoryLl.addSpan(0x03e8, 0x03e8);
        categoryLl.addSpan(0x03ea, 0x03ea);
        categoryLl.addSpan(0x03ec, 0x03ec);
        categoryLl.addSpan(0x03ee, 0x03ee);
        categoryLl.addSpan(0x03f4, 0x03f4);
        categoryLl.addSpan(0x03f7, 0x03f7);
        categoryLl.addSpan(0x03f9, 0x03fa);
        categoryLl.addSpan(0x03fd, 0x042f);
        categoryLl.addSpan(0x0460, 0x0460);
        categoryLl.addSpan(0x0462, 0x0462);
        categoryLl.addSpan(0x0464, 0x0464);
        categoryLl.addSpan(0x0466, 0x0466);
        categoryLl.addSpan(0x0468, 0x0468);
        categoryLl.addSpan(0x046a, 0x046a);
        categoryLl.addSpan(0x046c, 0x046c);
        categoryLl.addSpan(0x046e, 0x046e);
        categoryLl.addSpan(0x0470, 0x0470);
        categoryLl.addSpan(0x0472, 0x0472);
        categoryLl.addSpan(0x0474, 0x0474);
        categoryLl.addSpan(0x0476, 0x0476);
        categoryLl.addSpan(0x0478, 0x0478);
        categoryLl.addSpan(0x047a, 0x047a);
        categoryLl.addSpan(0x047c, 0x047c);
        categoryLl.addSpan(0x047e, 0x047e);
        categoryLl.addSpan(0x0480, 0x0480);
        categoryLl.addSpan(0x048a, 0x048a);
        categoryLl.addSpan(0x048c, 0x048c);
        categoryLl.addSpan(0x048e, 0x048e);
        categoryLl.addSpan(0x0490, 0x0490);
        categoryLl.addSpan(0x0492, 0x0492);
        categoryLl.addSpan(0x0494, 0x0494);
        categoryLl.addSpan(0x0496, 0x0496);
        categoryLl.addSpan(0x0498, 0x0498);
        categoryLl.addSpan(0x049a, 0x049a);
        categoryLl.addSpan(0x049c, 0x049c);
        categoryLl.addSpan(0x049e, 0x049e);
        categoryLl.addSpan(0x04a0, 0x04a0);
        categoryLl.addSpan(0x04a2, 0x04a2);
        categoryLl.addSpan(0x04a4, 0x04a4);
        categoryLl.addSpan(0x04a6, 0x04a6);
        categoryLl.addSpan(0x04a8, 0x04a8);
        categoryLl.addSpan(0x04aa, 0x04aa);
        categoryLl.addSpan(0x04ac, 0x04ac);
        categoryLl.addSpan(0x04ae, 0x04ae);
        categoryLl.addSpan(0x04b0, 0x04b0);
        categoryLl.addSpan(0x04b2, 0x04b2);
        categoryLl.addSpan(0x04b4, 0x04b4);
        categoryLl.addSpan(0x04b6, 0x04b6);
        categoryLl.addSpan(0x04b8, 0x04b8);
        categoryLl.addSpan(0x04ba, 0x04ba);
        categoryLl.addSpan(0x04bc, 0x04bc);
        categoryLl.addSpan(0x04be, 0x04be);
        categoryLl.addSpan(0x04c0, 0x04c1);
        categoryLl.addSpan(0x04c3, 0x04c3);
        categoryLl.addSpan(0x04c5, 0x04c5);
        categoryLl.addSpan(0x04c7, 0x04c7);
        categoryLl.addSpan(0x04c9, 0x04c9);
        categoryLl.addSpan(0x04cb, 0x04cb);
        categoryLl.addSpan(0x04cd, 0x04cd);
        categoryLl.addSpan(0x04d0, 0x04d0);
        categoryLl.addSpan(0x04d2, 0x04d2);
        categoryLl.addSpan(0x04d4, 0x04d4);
        categoryLl.addSpan(0x04d6, 0x04d6);
        categoryLl.addSpan(0x04d8, 0x04d8);
        categoryLl.addSpan(0x04da, 0x04da);
        categoryLl.addSpan(0x04dc, 0x04dc);
        categoryLl.addSpan(0x04de, 0x04de);
        categoryLl.addSpan(0x04e0, 0x04e0);
        categoryLl.addSpan(0x04e2, 0x04e2);
        categoryLl.addSpan(0x04e4, 0x04e4);
        categoryLl.addSpan(0x04e6, 0x04e6);
        categoryLl.addSpan(0x04e8, 0x04e8);
        categoryLl.addSpan(0x04ea, 0x04ea);
        categoryLl.addSpan(0x04ec, 0x04ec);
        categoryLl.addSpan(0x04ee, 0x04ee);
        categoryLl.addSpan(0x04f0, 0x04f0);
        categoryLl.addSpan(0x04f2, 0x04f2);
        categoryLl.addSpan(0x04f4, 0x04f4);
        categoryLl.addSpan(0x04f6, 0x04f6);
        categoryLl.addSpan(0x04f8, 0x04f8);
        categoryLl.addSpan(0x04fa, 0x04fa);
        categoryLl.addSpan(0x04fc, 0x04fc);
        categoryLl.addSpan(0x04fe, 0x04fe);
        categoryLl.addSpan(0x0500, 0x0500);
        categoryLl.addSpan(0x0502, 0x0502);
        categoryLl.addSpan(0x0504, 0x0504);
        categoryLl.addSpan(0x0506, 0x0506);
        categoryLl.addSpan(0x0508, 0x0508);
        categoryLl.addSpan(0x050a, 0x050a);
        categoryLl.addSpan(0x050c, 0x050c);
        categoryLl.addSpan(0x050e, 0x050e);
        categoryLl.addSpan(0x0510, 0x0510);
        categoryLl.addSpan(0x0512, 0x0512);
        categoryLl.addSpan(0x0514, 0x0514);
        categoryLl.addSpan(0x0516, 0x0516);
        categoryLl.addSpan(0x0518, 0x0518);
        categoryLl.addSpan(0x051a, 0x051a);
        categoryLl.addSpan(0x051c, 0x051c);
        categoryLl.addSpan(0x051e, 0x051e);
        categoryLl.addSpan(0x0520, 0x0520);
        categoryLl.addSpan(0x0522, 0x0522);
        categoryLl.addSpan(0x0524, 0x0524);
        categoryLl.addSpan(0x0526, 0x0526);
        categoryLl.addSpan(0x0528, 0x0528);
        categoryLl.addSpan(0x052a, 0x052a);
        categoryLl.addSpan(0x052c, 0x052c);
        categoryLl.addSpan(0x052e, 0x052e);
        categoryLl.addSpan(0x055a, 0x055f);
        categoryLl.addSpan(0x13a0, 0x13f5);
        categoryLl.addSpan(0x1c7e, 0x1c7f);
        categoryLl.addSpan(0x1cf8, 0x1cf9);
        categoryLl.addSpan(0x1d2c, 0x1d6a);
        categoryLl.addSpan(0x1d78, 0x1d78);
        categoryLl.addSpan(0x1e00, 0x1e00);
        categoryLl.addSpan(0x1e02, 0x1e02);
        categoryLl.addSpan(0x1e04, 0x1e04);
        categoryLl.addSpan(0x1e06, 0x1e06);
        categoryLl.addSpan(0x1e08, 0x1e08);
        categoryLl.addSpan(0x1e0a, 0x1e0a);
        categoryLl.addSpan(0x1e0c, 0x1e0c);
        categoryLl.addSpan(0x1e0e, 0x1e0e);
        categoryLl.addSpan(0x1e10, 0x1e10);
        categoryLl.addSpan(0x1e12, 0x1e12);
        categoryLl.addSpan(0x1e14, 0x1e14);
        categoryLl.addSpan(0x1e16, 0x1e16);
        categoryLl.addSpan(0x1e18, 0x1e18);
        categoryLl.addSpan(0x1e1a, 0x1e1a);
        categoryLl.addSpan(0x1e1c, 0x1e1c);
        categoryLl.addSpan(0x1e1e, 0x1e1e);
        categoryLl.addSpan(0x1e20, 0x1e20);
        categoryLl.addSpan(0x1e22, 0x1e22);
        categoryLl.addSpan(0x1e24, 0x1e24);
        categoryLl.addSpan(0x1e26, 0x1e26);
        categoryLl.addSpan(0x1e28, 0x1e28);
        categoryLl.addSpan(0x1e2a, 0x1e2a);
        categoryLl.addSpan(0x1e2c, 0x1e2c);
        categoryLl.addSpan(0x1e2e, 0x1e2e);
        categoryLl.addSpan(0x1e30, 0x1e30);
        categoryLl.addSpan(0x1e32, 0x1e32);
        categoryLl.addSpan(0x1e34, 0x1e34);
        categoryLl.addSpan(0x1e36, 0x1e36);
        categoryLl.addSpan(0x1e38, 0x1e38);
        categoryLl.addSpan(0x1e3a, 0x1e3a);
        categoryLl.addSpan(0x1e3c, 0x1e3c);
        categoryLl.addSpan(0x1e3e, 0x1e3e);
        categoryLl.addSpan(0x1e40, 0x1e40);
        categoryLl.addSpan(0x1e42, 0x1e42);
        categoryLl.addSpan(0x1e44, 0x1e44);
        categoryLl.addSpan(0x1e46, 0x1e46);
        categoryLl.addSpan(0x1e48, 0x1e48);
        categoryLl.addSpan(0x1e4a, 0x1e4a);
        categoryLl.addSpan(0x1e4c, 0x1e4c);
        categoryLl.addSpan(0x1e4e, 0x1e4e);
        categoryLl.addSpan(0x1e50, 0x1e50);
        categoryLl.addSpan(0x1e52, 0x1e52);
        categoryLl.addSpan(0x1e54, 0x1e54);
        categoryLl.addSpan(0x1e56, 0x1e56);
        categoryLl.addSpan(0x1e58, 0x1e58);
        categoryLl.addSpan(0x1e5a, 0x1e5a);
        categoryLl.addSpan(0x1e5c, 0x1e5c);
        categoryLl.addSpan(0x1e5e, 0x1e5e);
        categoryLl.addSpan(0x1e60, 0x1e60);
        categoryLl.addSpan(0x1e62, 0x1e62);
        categoryLl.addSpan(0x1e64, 0x1e64);
        categoryLl.addSpan(0x1e66, 0x1e66);
        categoryLl.addSpan(0x1e68, 0x1e68);
        categoryLl.addSpan(0x1e6a, 0x1e6a);
        categoryLl.addSpan(0x1e6c, 0x1e6c);
        categoryLl.addSpan(0x1e6e, 0x1e6e);
        categoryLl.addSpan(0x1e70, 0x1e70);
        categoryLl.addSpan(0x1e72, 0x1e72);
        categoryLl.addSpan(0x1e74, 0x1e74);
        categoryLl.addSpan(0x1e76, 0x1e76);
        categoryLl.addSpan(0x1e78, 0x1e78);
        categoryLl.addSpan(0x1e7a, 0x1e7a);
        categoryLl.addSpan(0x1e7c, 0x1e7c);
        categoryLl.addSpan(0x1e7e, 0x1e7e);
        categoryLl.addSpan(0x1e80, 0x1e80);
        categoryLl.addSpan(0x1e82, 0x1e82);
        categoryLl.addSpan(0x1e84, 0x1e84);
        categoryLl.addSpan(0x1e86, 0x1e86);
        categoryLl.addSpan(0x1e88, 0x1e88);
        categoryLl.addSpan(0x1e8a, 0x1e8a);
        categoryLl.addSpan(0x1e8c, 0x1e8c);
        categoryLl.addSpan(0x1e8e, 0x1e8e);
        categoryLl.addSpan(0x1e90, 0x1e90);
        categoryLl.addSpan(0x1e92, 0x1e92);
        categoryLl.addSpan(0x1e94, 0x1e94);
        categoryLl.addSpan(0x1e9e, 0x1e9e);
        categoryLl.addSpan(0x1ea0, 0x1ea0);
        categoryLl.addSpan(0x1ea2, 0x1ea2);
        categoryLl.addSpan(0x1ea4, 0x1ea4);
        categoryLl.addSpan(0x1ea6, 0x1ea6);
        categoryLl.addSpan(0x1ea8, 0x1ea8);
        categoryLl.addSpan(0x1eaa, 0x1eaa);
        categoryLl.addSpan(0x1eac, 0x1eac);
        categoryLl.addSpan(0x1eae, 0x1eae);
        categoryLl.addSpan(0x1eb0, 0x1eb0);
        categoryLl.addSpan(0x1eb2, 0x1eb2);
        categoryLl.addSpan(0x1eb4, 0x1eb4);
        categoryLl.addSpan(0x1eb6, 0x1eb6);
        categoryLl.addSpan(0x1eb8, 0x1eb8);
        categoryLl.addSpan(0x1eba, 0x1eba);
        categoryLl.addSpan(0x1ebc, 0x1ebc);
        categoryLl.addSpan(0x1ebe, 0x1ebe);
        categoryLl.addSpan(0x1ec0, 0x1ec0);
        categoryLl.addSpan(0x1ec2, 0x1ec2);
        categoryLl.addSpan(0x1ec4, 0x1ec4);
        categoryLl.addSpan(0x1ec6, 0x1ec6);
        categoryLl.addSpan(0x1ec8, 0x1ec8);
        categoryLl.addSpan(0x1eca, 0x1eca);
        categoryLl.addSpan(0x1ecc, 0x1ecc);
        categoryLl.addSpan(0x1ece, 0x1ece);
        categoryLl.addSpan(0x1ed0, 0x1ed0);
        categoryLl.addSpan(0x1ed2, 0x1ed2);
        categoryLl.addSpan(0x1ed4, 0x1ed4);
        categoryLl.addSpan(0x1ed6, 0x1ed6);
        categoryLl.addSpan(0x1ed8, 0x1ed8);
        categoryLl.addSpan(0x1eda, 0x1eda);
        categoryLl.addSpan(0x1edc, 0x1edc);
        categoryLl.addSpan(0x1ede, 0x1ede);
        categoryLl.addSpan(0x1ee0, 0x1ee0);
        categoryLl.addSpan(0x1ee2, 0x1ee2);
        categoryLl.addSpan(0x1ee4, 0x1ee4);
        categoryLl.addSpan(0x1ee6, 0x1ee6);
        categoryLl.addSpan(0x1ee8, 0x1ee8);
        categoryLl.addSpan(0x1eea, 0x1eea);
        categoryLl.addSpan(0x1eec, 0x1eec);
        categoryLl.addSpan(0x1eee, 0x1eee);
        categoryLl.addSpan(0x1ef0, 0x1ef0);
        categoryLl.addSpan(0x1ef2, 0x1ef2);
        categoryLl.addSpan(0x1ef4, 0x1ef4);
        categoryLl.addSpan(0x1ef6, 0x1ef6);
        categoryLl.addSpan(0x1ef8, 0x1ef8);
        categoryLl.addSpan(0x1efa, 0x1efa);
        categoryLl.addSpan(0x1efc, 0x1efc);
        categoryLl.addSpan(0x1efe, 0x1efe);
        categoryLl.addSpan(0x1f08, 0x1f0f);
        categoryLl.addSpan(0x1f18, 0x1f1d);
        categoryLl.addSpan(0x1f28, 0x1f2f);
        categoryLl.addSpan(0x1f38, 0x1f3f);
        categoryLl.addSpan(0x1f48, 0x1f4d);
        categoryLl.addSpan(0x1f59, 0x1f5f);
        categoryLl.addSpan(0x1f68, 0x1f6f);
        categoryLl.addSpan(0x1f88, 0x1f8f);
        categoryLl.addSpan(0x1f98, 0x1f9f);
        categoryLl.addSpan(0x1fa8, 0x1faf);
        categoryLl.addSpan(0x1fbd, 0x1fbd);
        categoryLl.addSpan(0x1fbf, 0x1fc1);
        categoryLl.addSpan(0x1fcd, 0x1fcf);
        categoryLl.addSpan(0x1fdd, 0x1fdf);
        categoryLl.addSpan(0x1fed, 0x1fef);
        categoryLl.addSpan(0x2108, 0x2109);
        categoryLl.addSpan(0x210b, 0x210d);
        categoryLl.addSpan(0x2110, 0x2112);
        categoryLl.addSpan(0x212e, 0x212e);
        categoryLl.addSpan(0x2130, 0x2133);
        categoryLl.addSpan(0x2135, 0x2138);
        categoryLl.addSpan(0x213a, 0x213b);
        categoryLl.addSpan(0x2145, 0x2145);
        categoryLl.addSpan(0x214c, 0x214d);
        categoryLl.addSpan(0x2183, 0x2183);
        categoryLl.addSpan(0x2c00, 0x2c2e);
        categoryLl.addSpan(0x2c60, 0x2c60);
        categoryLl.addSpan(0x2c62, 0x2c64);
        categoryLl.addSpan(0x2c67, 0x2c67);
        categoryLl.addSpan(0x2c69, 0x2c69);
        categoryLl.addSpan(0x2c6b, 0x2c6b);
        categoryLl.addSpan(0x2c6d, 0x2c70);
        categoryLl.addSpan(0x2c72, 0x2c72);
        categoryLl.addSpan(0x2c75, 0x2c75);
        categoryLl.addSpan(0x2c7e, 0x2c80);
        categoryLl.addSpan(0x2c82, 0x2c82);
        categoryLl.addSpan(0x2c84, 0x2c84);
        categoryLl.addSpan(0x2c86, 0x2c86);
        categoryLl.addSpan(0x2c88, 0x2c88);
        categoryLl.addSpan(0x2c8a, 0x2c8a);
        categoryLl.addSpan(0x2c8c, 0x2c8c);
        categoryLl.addSpan(0x2c8e, 0x2c8e);
        categoryLl.addSpan(0x2c90, 0x2c90);
        categoryLl.addSpan(0x2c92, 0x2c92);
        categoryLl.addSpan(0x2c94, 0x2c94);
        categoryLl.addSpan(0x2c96, 0x2c96);
        categoryLl.addSpan(0x2c98, 0x2c98);
        categoryLl.addSpan(0x2c9a, 0x2c9a);
        categoryLl.addSpan(0x2c9c, 0x2c9c);
        categoryLl.addSpan(0x2c9e, 0x2c9e);
        categoryLl.addSpan(0x2ca0, 0x2ca0);
        categoryLl.addSpan(0x2ca2, 0x2ca2);
        categoryLl.addSpan(0x2ca4, 0x2ca4);
        categoryLl.addSpan(0x2ca6, 0x2ca6);
        categoryLl.addSpan(0x2ca8, 0x2ca8);
        categoryLl.addSpan(0x2caa, 0x2caa);
        categoryLl.addSpan(0x2cac, 0x2cac);
        categoryLl.addSpan(0x2cae, 0x2cae);
        categoryLl.addSpan(0x2cb0, 0x2cb0);
        categoryLl.addSpan(0x2cb2, 0x2cb2);
        categoryLl.addSpan(0x2cb4, 0x2cb4);
        categoryLl.addSpan(0x2cb6, 0x2cb6);
        categoryLl.addSpan(0x2cb8, 0x2cb8);
        categoryLl.addSpan(0x2cba, 0x2cba);
        categoryLl.addSpan(0x2cbc, 0x2cbc);
        categoryLl.addSpan(0x2cbe, 0x2cbe);
        categoryLl.addSpan(0x2cc0, 0x2cc0);
        categoryLl.addSpan(0x2cc2, 0x2cc2);
        categoryLl.addSpan(0x2cc4, 0x2cc4);
        categoryLl.addSpan(0x2cc6, 0x2cc6);
        categoryLl.addSpan(0x2cc8, 0x2cc8);
        categoryLl.addSpan(0x2cca, 0x2cca);
        categoryLl.addSpan(0x2ccc, 0x2ccc);
        categoryLl.addSpan(0x2cce, 0x2cce);
        categoryLl.addSpan(0x2cd0, 0x2cd0);
        categoryLl.addSpan(0x2cd2, 0x2cd2);
        categoryLl.addSpan(0x2cd4, 0x2cd4);
        categoryLl.addSpan(0x2cd6, 0x2cd6);
        categoryLl.addSpan(0x2cd8, 0x2cd8);
        categoryLl.addSpan(0x2cda, 0x2cda);
        categoryLl.addSpan(0x2cdc, 0x2cdc);
        categoryLl.addSpan(0x2cde, 0x2cde);
        categoryLl.addSpan(0x2ce0, 0x2ce0);
        categoryLl.addSpan(0x2ce2, 0x2ce2);
        categoryLl.addSpan(0x2ceb, 0x2ceb);
        categoryLl.addSpan(0x2ced, 0x2ced);
        categoryLl.addSpan(0x2cf2, 0x2cf2);
        categoryLl.addSpan(0x2cfe, 0x2cff);
        categoryLl.addSpan(0xa640, 0xa640);
        categoryLl.addSpan(0xa642, 0xa642);
        categoryLl.addSpan(0xa644, 0xa644);
        categoryLl.addSpan(0xa646, 0xa646);
        categoryLl.addSpan(0xa648, 0xa648);
        categoryLl.addSpan(0xa64a, 0xa64a);
        categoryLl.addSpan(0xa64c, 0xa64c);
        categoryLl.addSpan(0xa64e, 0xa64e);
        categoryLl.addSpan(0xa650, 0xa650);
        categoryLl.addSpan(0xa652, 0xa652);
        categoryLl.addSpan(0xa654, 0xa654);
        categoryLl.addSpan(0xa656, 0xa656);
        categoryLl.addSpan(0xa658, 0xa658);
        categoryLl.addSpan(0xa65a, 0xa65a);
        categoryLl.addSpan(0xa65c, 0xa65c);
        categoryLl.addSpan(0xa65e, 0xa65e);
        categoryLl.addSpan(0xa660, 0xa660);
        categoryLl.addSpan(0xa662, 0xa662);
        categoryLl.addSpan(0xa664, 0xa664);
        categoryLl.addSpan(0xa666, 0xa666);
        categoryLl.addSpan(0xa668, 0xa668);
        categoryLl.addSpan(0xa66a, 0xa66a);
        categoryLl.addSpan(0xa66c, 0xa66c);
        categoryLl.addSpan(0xa680, 0xa680);
        categoryLl.addSpan(0xa682, 0xa682);
        categoryLl.addSpan(0xa684, 0xa684);
        categoryLl.addSpan(0xa686, 0xa686);
        categoryLl.addSpan(0xa688, 0xa688);
        categoryLl.addSpan(0xa68a, 0xa68a);
        categoryLl.addSpan(0xa68c, 0xa68c);
        categoryLl.addSpan(0xa68e, 0xa68e);
        categoryLl.addSpan(0xa690, 0xa690);
        categoryLl.addSpan(0xa692, 0xa692);
        categoryLl.addSpan(0xa694, 0xa694);
        categoryLl.addSpan(0xa696, 0xa696);
        categoryLl.addSpan(0xa698, 0xa698);
        categoryLl.addSpan(0xa69a, 0xa69a);
        categoryLl.addSpan(0xa722, 0xa722);
        categoryLl.addSpan(0xa724, 0xa724);
        categoryLl.addSpan(0xa726, 0xa726);
        categoryLl.addSpan(0xa728, 0xa728);
        categoryLl.addSpan(0xa72a, 0xa72a);
        categoryLl.addSpan(0xa72c, 0xa72c);
        categoryLl.addSpan(0xa72e, 0xa72e);
        categoryLl.addSpan(0xa732, 0xa732);
        categoryLl.addSpan(0xa734, 0xa734);
        categoryLl.addSpan(0xa736, 0xa736);
        categoryLl.addSpan(0xa738, 0xa738);
        categoryLl.addSpan(0xa73a, 0xa73a);
        categoryLl.addSpan(0xa73c, 0xa73c);
        categoryLl.addSpan(0xa73e, 0xa73e);
        categoryLl.addSpan(0xa740, 0xa740);
        categoryLl.addSpan(0xa742, 0xa742);
        categoryLl.addSpan(0xa744, 0xa744);
        categoryLl.addSpan(0xa746, 0xa746);
        categoryLl.addSpan(0xa748, 0xa748);
        categoryLl.addSpan(0xa74a, 0xa74a);
        categoryLl.addSpan(0xa74c, 0xa74c);
        categoryLl.addSpan(0xa74e, 0xa74e);
        categoryLl.addSpan(0xa750, 0xa750);
        categoryLl.addSpan(0xa752, 0xa752);
        categoryLl.addSpan(0xa754, 0xa754);
        categoryLl.addSpan(0xa756, 0xa756);
        categoryLl.addSpan(0xa758, 0xa758);
        categoryLl.addSpan(0xa75a, 0xa75a);
        categoryLl.addSpan(0xa75c, 0xa75c);
        categoryLl.addSpan(0xa75e, 0xa75e);
        categoryLl.addSpan(0xa760, 0xa760);
        categoryLl.addSpan(0xa762, 0xa762);
        categoryLl.addSpan(0xa764, 0xa764);
        categoryLl.addSpan(0xa766, 0xa766);
        categoryLl.addSpan(0xa768, 0xa768);
        categoryLl.addSpan(0xa76a, 0xa76a);
        categoryLl.addSpan(0xa76c, 0xa76c);
        categoryLl.addSpan(0xa76e, 0xa76e);
        categoryLl.addSpan(0xa770, 0xa770);
        categoryLl.addSpan(0xa779, 0xa779);
        categoryLl.addSpan(0xa77b, 0xa77b);
        categoryLl.addSpan(0xa77d, 0xa77e);
        categoryLl.addSpan(0xa780, 0xa780);
        categoryLl.addSpan(0xa782, 0xa782);
        categoryLl.addSpan(0xa784, 0xa784);
        categoryLl.addSpan(0xa786, 0xa786);
        categoryLl.addSpan(0xa78b, 0xa78b);
        categoryLl.addSpan(0xa78d, 0xa78d);
        categoryLl.addSpan(0xa790, 0xa790);
        categoryLl.addSpan(0xa792, 0xa792);
        categoryLl.addSpan(0xa796, 0xa796);
        categoryLl.addSpan(0xa798, 0xa798);
        categoryLl.addSpan(0xa79a, 0xa79a);
        categoryLl.addSpan(0xa79c, 0xa79c);
        categoryLl.addSpan(0xa79e, 0xa79e);
        categoryLl.addSpan(0xa7a0, 0xa7a0);
        categoryLl.addSpan(0xa7a2, 0xa7a2);
        categoryLl.addSpan(0xa7a4, 0xa7a4);
        categoryLl.addSpan(0xa7a6, 0xa7a6);
        categoryLl.addSpan(0xa7a8, 0xa7a8);
        categoryLl.addSpan(0xa7aa, 0xa7b4);
        categoryLl.addSpan(0xa7b6, 0xa7b6);
        categoryLl.addSpan(0xa7f8, 0xa7f9);
        categoryLl.addSpan(0xab01, 0xab2e);
        categoryLl.addSpan(0xab5c, 0xab5f);
        categoryLl.addSpan(0xf900, 0xfad9);
        categoryLl.addSpan(0xff40, 0xff40);
        categoryLl.addSpan(0x00010400, 0x00010427);
        categoryLl.addSpan(0x000104b0, 0x000104d3);
        categoryLl.addSpan(0x00010c80, 0x00010cb2);
        categoryLl.addSpan(0x000118a0, 0x000118bf);
        categoryLl.addSpan(0x0001d400, 0x0001d419);
        categoryLl.addSpan(0x0001d434, 0x0001d44d);
        categoryLl.addSpan(0x0001d468, 0x0001d481);
        categoryLl.addSpan(0x0001d49c, 0x0001d4b5);
        categoryLl.addSpan(0x0001d4d0, 0x0001d4e9);
        categoryLl.addSpan(0x0001d504, 0x0001d51c);
        categoryLl.addSpan(0x0001d538, 0x0001d550);
        categoryLl.addSpan(0x0001d56c, 0x0001d585);
        categoryLl.addSpan(0x0001d5a0, 0x0001d5b9);
        categoryLl.addSpan(0x0001d5d4, 0x0001d5ed);
        categoryLl.addSpan(0x0001d608, 0x0001d621);
        categoryLl.addSpan(0x0001d63c, 0x0001d655);
        categoryLl.addSpan(0x0001d670, 0x0001d689);
        categoryLl.addSpan(0x0001d6c1, 0x0001d6c1);
        categoryLl.addSpan(0x0001d6db, 0x0001d6db);
        categoryLl.addSpan(0x0001d6fb, 0x0001d6fb);
        categoryLl.addSpan(0x0001d715, 0x0001d715);
        categoryLl.addSpan(0x0001d735, 0x0001d735);
        categoryLl.addSpan(0x0001d74f, 0x0001d74f);
        categoryLl.addSpan(0x0001d76f, 0x0001d76f);
        categoryLl.addSpan(0x0001d789, 0x0001d789);
        categoryLl.addSpan(0x0001d7a9, 0x0001d7a9);
        categoryLl.addSpan(0x0001d7c3, 0x0001d7c3);
        categoryLl.addSpan(0x0001d7ca, 0x0001d7ca);
        categoryLl.addSpan(0x0001e900, 0x0001e921);
        return categoryLl;
    }

    /**
     * The Unicode category No
     */
    private static UnicodeCategory categoryNo = null;

    /**
     * Gets the Unicode category No
     *
     * @return The Unicode category No
     */
    public static UnicodeCategory getNo() {
        if (categoryNo != null)
            return categoryNo;
        categoryNo = new UnicodeCategory("No");
        categoryNo.addSpan(0x00b1, 0x00b1);
        categoryNo.addSpan(0x00b8, 0x00b8);
        categoryNo.addSpan(0x00bb, 0x00bb);
        categoryNo.addSpan(0x09f2, 0x09f3);
        categoryNo.addSpan(0x0b71, 0x0b71);
        categoryNo.addSpan(0x0be6, 0x0bef);
        categoryNo.addSpan(0x0c66, 0x0c6f);
        categoryNo.addSpan(0x0d57, 0x0d57);
        categoryNo.addSpan(0x0d66, 0x0d6f);
        categoryNo.addSpan(0x0f20, 0x0f29);
        categoryNo.addSpan(0x1360, 0x1368);
        categoryNo.addSpan(0x17e0, 0x17e9);
        categoryNo.addSpan(0x19d0, 0x19d9);
        categoryNo.addSpan(0x2060, 0x206f);
        categoryNo.addSpan(0x2071, 0x2071);
        categoryNo.addSpan(0x207f, 0x207f);
        categoryNo.addSpan(0x214f, 0x214f);
        categoryNo.addSpan(0x2185, 0x2188);
        categoryNo.addSpan(0x23e2, 0x244a);
        categoryNo.addSpan(0x249c, 0x24e9);
        categoryNo.addSpan(0x2775, 0x2775);
        categoryNo.addSpan(0x2cf9, 0x2cfc);
        categoryNo.addSpan(0x3190, 0x3191);
        categoryNo.addSpan(0x3200, 0x321e);
        categoryNo.addSpan(0x322a, 0x3247);
        categoryNo.addSpan(0x3250, 0x3250);
        categoryNo.addSpan(0x3260, 0x327f);
        categoryNo.addSpan(0x328a, 0x32b0);
        categoryNo.addSpan(0xa828, 0xa82b);
        categoryNo.addSpan(0x00010100, 0x00010102);
        categoryNo.addSpan(0x00010140, 0x00010174);
        categoryNo.addSpan(0x00010179, 0x00010189);
        categoryNo.addSpan(0x000102e0, 0x000102e0);
        categoryNo.addSpan(0x00010300, 0x0001031f);
        categoryNo.addSpan(0x00010857, 0x00010857);
        categoryNo.addSpan(0x00010877, 0x00010878);
        categoryNo.addSpan(0x00010880, 0x0001089e);
        categoryNo.addSpan(0x000108e0, 0x000108f5);
        categoryNo.addSpan(0x00010900, 0x00010915);
        categoryNo.addSpan(0x00010980, 0x000109b7);
        categoryNo.addSpan(0x000109be, 0x000109bf);
        categoryNo.addSpan(0x00010a38, 0x00010a3f);
        categoryNo.addSpan(0x00010a60, 0x00010a7c);
        categoryNo.addSpan(0x00010a80, 0x00010a9c);
        categoryNo.addSpan(0x00010ae5, 0x00010ae6);
        categoryNo.addSpan(0x00010b40, 0x00010b55);
        categoryNo.addSpan(0x00010b60, 0x00010b72);
        categoryNo.addSpan(0x00010b99, 0x00010b9c);
        categoryNo.addSpan(0x00010cc0, 0x00010cf2);
        categoryNo.addSpan(0x00011047, 0x0001104d);
        categoryNo.addSpan(0x000111dd, 0x000111df);
        categoryNo.addSpan(0x00011730, 0x00011739);
        categoryNo.addSpan(0x000118e0, 0x000118e9);
        categoryNo.addSpan(0x00011c50, 0x00011c59);
        categoryNo.addSpan(0x00016b50, 0x00016b59);
        categoryNo.addSpan(0x0001d245, 0x0001d356);
        categoryNo.addSpan(0x0001e800, 0x0001e8c4);
        categoryNo.addSpan(0x0001f000, 0x0001f0f5);
        return categoryNo;
    }

    /**
     * The Unicode category Lm
     */
    private static UnicodeCategory categoryLm = null;

    /**
     * Gets the Unicode category Lm
     *
     * @return The Unicode category Lm
     */
    public static UnicodeCategory getLm() {
        if (categoryLm != null)
            return categoryLm;
        categoryLm = new UnicodeCategory("Lm");
        categoryLm.addSpan(0x0295, 0x02af);
        categoryLm.addSpan(0x02c2, 0x02c5);
        categoryLm.addSpan(0x02d2, 0x02df);
        categoryLm.addSpan(0x02e5, 0x02eb);
        categoryLm.addSpan(0x02ed, 0x02ed);
        categoryLm.addSpan(0x0373, 0x0373);
        categoryLm.addSpan(0x0377, 0x0377);
        categoryLm.addSpan(0x0531, 0x0556);
        categoryLm.addSpan(0x0620, 0x063f);
        categoryLm.addSpan(0x06df, 0x06e4);
        categoryLm.addSpan(0x07eb, 0x07f3);
        categoryLm.addSpan(0x07f7, 0x07f9);
        categoryLm.addSpan(0x0816, 0x0819);
        categoryLm.addSpan(0x081b, 0x0823);
        categoryLm.addSpan(0x0825, 0x0827);
        categoryLm.addSpan(0x0970, 0x0970);
        categoryLm.addSpan(0x0e40, 0x0e45);
        categoryLm.addSpan(0x0ebd, 0x0ec4);
        categoryLm.addSpan(0x10fb, 0x10fb);
        categoryLm.addSpan(0x17d4, 0x17d6);
        categoryLm.addSpan(0x1820, 0x1842);
        categoryLm.addSpan(0x1aa0, 0x1aa6);
        categoryLm.addSpan(0x1c5a, 0x1c77);
        categoryLm.addSpan(0x1d00, 0x1d2b);
        categoryLm.addSpan(0x1d6b, 0x1d77);
        categoryLm.addSpan(0x1d79, 0x1d9a);
        categoryLm.addSpan(0x2070, 0x2070);
        categoryLm.addSpan(0x207e, 0x207e);
        categoryLm.addSpan(0x208e, 0x208e);
        categoryLm.addSpan(0x2c76, 0x2c7b);
        categoryLm.addSpan(0x2d30, 0x2d67);
        categoryLm.addSpan(0x2e2a, 0x2e2e);
        categoryLm.addSpan(0x3004, 0x3004);
        categoryLm.addSpan(0x3030, 0x3030);
        categoryLm.addSpan(0x3038, 0x303a);
        categoryLm.addSpan(0x309b, 0x309c);
        categoryLm.addSpan(0x30fb, 0x30fb);
        categoryLm.addSpan(0x4e00, 0xa014);
        categoryLm.addSpan(0xa4d0, 0xa4f7);
        categoryLm.addSpan(0xa500, 0xa60b);
        categoryLm.addSpan(0xa67e, 0xa67e);
        categoryLm.addSpan(0xa69b, 0xa69b);
        categoryLm.addSpan(0xa700, 0xa716);
        categoryLm.addSpan(0xa76f, 0xa76f);
        categoryLm.addSpan(0xa787, 0xa787);
        categoryLm.addSpan(0xa7f7, 0xa7f7);
        categoryLm.addSpan(0xa9c1, 0xa9cd);
        categoryLm.addSpan(0xa9e5, 0xa9e5);
        categoryLm.addSpan(0xaa60, 0xaa6f);
        categoryLm.addSpan(0xaac2, 0xaadc);
        categoryLm.addSpan(0xaaf2, 0xaaf2);
        categoryLm.addSpan(0xab5b, 0xab5b);
        categoryLm.addSpan(0xff66, 0xff6f);
        categoryLm.addSpan(0xff71, 0xff9d);
        categoryLm.addSpan(0x00016b3c, 0x00016b3f);
        categoryLm.addSpan(0x00016f8f, 0x00016f92);
        return categoryLm;
    }

    /**
     * The Unicode category Ps
     */
    private static UnicodeCategory categoryPs = null;

    /**
     * Gets the Unicode category Ps
     *
     * @return The Unicode category Ps
     */
    public static UnicodeCategory getPs() {
        if (categoryPs != null)
            return categoryPs;
        categoryPs = new UnicodeCategory("Ps");
        categoryPs.addSpan(0x0025, 0x0027);
        categoryPs.addSpan(0x0041, 0x005a);
        categoryPs.addSpan(0x0061, 0x007a);
        categoryPs.addSpan(0x0f39, 0x0f39);
        categoryPs.addSpan(0x0f3b, 0x0f3b);
        categoryPs.addSpan(0x1681, 0x169a);
        categoryPs.addSpan(0x2019, 0x2019);
        categoryPs.addSpan(0x201d, 0x201d);
        categoryPs.addSpan(0x2044, 0x2044);
        categoryPs.addSpan(0x207a, 0x207c);
        categoryPs.addSpan(0x208a, 0x208c);
        categoryPs.addSpan(0x2300, 0x2307);
        categoryPs.addSpan(0x2309, 0x2309);
        categoryPs.addSpan(0x2322, 0x2328);
        categoryPs.addSpan(0x2670, 0x2767);
        categoryPs.addSpan(0x2769, 0x2769);
        categoryPs.addSpan(0x276b, 0x276b);
        categoryPs.addSpan(0x276d, 0x276d);
        categoryPs.addSpan(0x276f, 0x276f);
        categoryPs.addSpan(0x2771, 0x2771);
        categoryPs.addSpan(0x2773, 0x2773);
        categoryPs.addSpan(0x27c0, 0x27c4);
        categoryPs.addSpan(0x27c7, 0x27e5);
        categoryPs.addSpan(0x27e7, 0x27e7);
        categoryPs.addSpan(0x27e9, 0x27e9);
        categoryPs.addSpan(0x27eb, 0x27eb);
        categoryPs.addSpan(0x27ed, 0x27ed);
        categoryPs.addSpan(0x2900, 0x2982);
        categoryPs.addSpan(0x2984, 0x2984);
        categoryPs.addSpan(0x2986, 0x2986);
        categoryPs.addSpan(0x2988, 0x2988);
        categoryPs.addSpan(0x298a, 0x298a);
        categoryPs.addSpan(0x298c, 0x298c);
        categoryPs.addSpan(0x298e, 0x298e);
        categoryPs.addSpan(0x2990, 0x2990);
        categoryPs.addSpan(0x2992, 0x2992);
        categoryPs.addSpan(0x2994, 0x2994);
        categoryPs.addSpan(0x2996, 0x2996);
        categoryPs.addSpan(0x2999, 0x29d7);
        categoryPs.addSpan(0x29d9, 0x29d9);
        categoryPs.addSpan(0x29dc, 0x29fb);
        categoryPs.addSpan(0x2e21, 0x2e21);
        categoryPs.addSpan(0x2e23, 0x2e23);
        categoryPs.addSpan(0x2e25, 0x2e25);
        categoryPs.addSpan(0x2e27, 0x2e27);
        categoryPs.addSpan(0x2e41, 0x2e41);
        categoryPs.addSpan(0x3007, 0x3007);
        categoryPs.addSpan(0x3009, 0x3009);
        categoryPs.addSpan(0x300b, 0x300b);
        categoryPs.addSpan(0x300d, 0x300d);
        categoryPs.addSpan(0x300f, 0x300f);
        categoryPs.addSpan(0x3012, 0x3013);
        categoryPs.addSpan(0x3015, 0x3015);
        categoryPs.addSpan(0x3017, 0x3017);
        categoryPs.addSpan(0x3019, 0x3019);
        categoryPs.addSpan(0x301c, 0x301c);
        categoryPs.addSpan(0xfd3e, 0xfd3e);
        categoryPs.addSpan(0xfe10, 0xfe16);
        categoryPs.addSpan(0xfe33, 0xfe34);
        categoryPs.addSpan(0xfe36, 0xfe36);
        categoryPs.addSpan(0xfe38, 0xfe38);
        categoryPs.addSpan(0xfe3a, 0xfe3a);
        categoryPs.addSpan(0xfe3c, 0xfe3c);
        categoryPs.addSpan(0xfe3e, 0xfe3e);
        categoryPs.addSpan(0xfe40, 0xfe40);
        categoryPs.addSpan(0xfe42, 0xfe42);
        categoryPs.addSpan(0xfe45, 0xfe46);
        categoryPs.addSpan(0xfe58, 0xfe58);
        categoryPs.addSpan(0xfe5a, 0xfe5a);
        categoryPs.addSpan(0xfe5c, 0xfe5c);
        categoryPs.addSpan(0xff05, 0xff07);
        categoryPs.addSpan(0xff21, 0xff3a);
        categoryPs.addSpan(0xff41, 0xff5a);
        categoryPs.addSpan(0xff5e, 0xff5e);
        categoryPs.addSpan(0xff61, 0xff61);
        return categoryPs;
    }

    /**
     * The Unicode category Lo
     */
    private static UnicodeCategory categoryLo = null;

    /**
     * Gets the Unicode category Lo
     *
     * @return The Unicode category Lo
     */
    public static UnicodeCategory getLo() {
        if (categoryLo != null)
            return categoryLo;
        categoryLo = new UnicodeCategory("Lo");
        categoryLo.addSpan(0x00a9, 0x00a9);
        categoryLo.addSpan(0x00b9, 0x00b9);
        categoryLo.addSpan(0x01b9, 0x01ba);
        categoryLo.addSpan(0x01bd, 0x01bf);
        categoryLo.addSpan(0x024f, 0x0293);
        categoryLo.addSpan(0x05c7, 0x05c7);
        categoryLo.addSpan(0x061e, 0x061f);
        categoryLo.addSpan(0x0640, 0x0640);
        categoryLo.addSpan(0x066a, 0x066d);
        categoryLo.addSpan(0x0670, 0x0670);
        categoryLo.addSpan(0x06d4, 0x06d4);
        categoryLo.addSpan(0x06ea, 0x06ed);
        categoryLo.addSpan(0x06f0, 0x06f9);
        categoryLo.addSpan(0x06fd, 0x06fe);
        categoryLo.addSpan(0x070f, 0x070f);
        categoryLo.addSpan(0x0711, 0x0711);
        categoryLo.addSpan(0x0730, 0x074a);
        categoryLo.addSpan(0x07a6, 0x07b0);
        categoryLo.addSpan(0x07c0, 0x07c9);
        categoryLo.addSpan(0x07fa, 0x07fa);
        categoryLo.addSpan(0x0830, 0x083e);
        categoryLo.addSpan(0x085e, 0x085e);
        categoryLo.addSpan(0x0903, 0x0903);
        categoryLo.addSpan(0x093c, 0x093c);
        categoryLo.addSpan(0x094e, 0x094f);
        categoryLo.addSpan(0x0951, 0x0957);
        categoryLo.addSpan(0x0971, 0x0971);
        categoryLo.addSpan(0x0982, 0x0983);
        categoryLo.addSpan(0x09bc, 0x09bc);
        categoryLo.addSpan(0x09cd, 0x09cd);
        categoryLo.addSpan(0x09d7, 0x09d7);
        categoryLo.addSpan(0x09e6, 0x09ef);
        categoryLo.addSpan(0x09fb, 0x09fb);
        categoryLo.addSpan(0x0a03, 0x0a03);
        categoryLo.addSpan(0x0a41, 0x0a51);
        categoryLo.addSpan(0x0a70, 0x0a71);
        categoryLo.addSpan(0x0a83, 0x0a83);
        categoryLo.addSpan(0x0abc, 0x0abc);
        categoryLo.addSpan(0x0acd, 0x0acd);
        categoryLo.addSpan(0x0af1, 0x0af1);
        categoryLo.addSpan(0x0b02, 0x0b03);
        categoryLo.addSpan(0x0b3c, 0x0b3c);
        categoryLo.addSpan(0x0b57, 0x0b57);
        categoryLo.addSpan(0x0b70, 0x0b70);
        categoryLo.addSpan(0x0b82, 0x0b82);
        categoryLo.addSpan(0x0bcd, 0x0bcd);
        categoryLo.addSpan(0x0c01, 0x0c03);
        categoryLo.addSpan(0x0c46, 0x0c56);
        categoryLo.addSpan(0x0c7f, 0x0c7f);
        categoryLo.addSpan(0x0c82, 0x0c83);
        categoryLo.addSpan(0x0cbc, 0x0cbc);
        categoryLo.addSpan(0x0cd5, 0x0cd6);
        categoryLo.addSpan(0x0ce6, 0x0cef);
        categoryLo.addSpan(0x0d02, 0x0d03);
        categoryLo.addSpan(0x0d3b, 0x0d3c);
        categoryLo.addSpan(0x0d4d, 0x0d4d);
        categoryLo.addSpan(0x0d4f, 0x0d4f);
        categoryLo.addSpan(0x0d58, 0x0d5e);
        categoryLo.addSpan(0x0d79, 0x0d79);
        categoryLo.addSpan(0x0d82, 0x0d83);
        categoryLo.addSpan(0x0df4, 0x0df4);
        categoryLo.addSpan(0x0e31, 0x0e31);
        categoryLo.addSpan(0x0e3f, 0x0e3f);
        categoryLo.addSpan(0x0e5a, 0x0e5b);
        categoryLo.addSpan(0x0eb1, 0x0eb1);
        categoryLo.addSpan(0x0eb4, 0x0ebc);
        categoryLo.addSpan(0x0ed0, 0x0ed9);
        categoryLo.addSpan(0x0f3e, 0x0f3f);
        categoryLo.addSpan(0x0f86, 0x0f87);
        categoryLo.addSpan(0x0fd9, 0x0fda);
        categoryLo.addSpan(0x103d, 0x103e);
        categoryLo.addSpan(0x104a, 0x104f);
        categoryLo.addSpan(0x1058, 0x1059);
        categoryLo.addSpan(0x105e, 0x1060);
        categoryLo.addSpan(0x1062, 0x1064);
        categoryLo.addSpan(0x1067, 0x106d);
        categoryLo.addSpan(0x1071, 0x1074);
        categoryLo.addSpan(0x108d, 0x108d);
        categoryLo.addSpan(0x10a0, 0x10cd);
        categoryLo.addSpan(0x10fc, 0x10fc);
        categoryLo.addSpan(0x1369, 0x137c);
        categoryLo.addSpan(0x1400, 0x1400);
        categoryLo.addSpan(0x166d, 0x166e);
        categoryLo.addSpan(0x1680, 0x1680);
        categoryLo.addSpan(0x169c, 0x169c);
        categoryLo.addSpan(0x16ee, 0x16f0);
        categoryLo.addSpan(0x1712, 0x1714);
        categoryLo.addSpan(0x1735, 0x1736);
        categoryLo.addSpan(0x1752, 0x1753);
        categoryLo.addSpan(0x1772, 0x1773);
        categoryLo.addSpan(0x17db, 0x17db);
        categoryLo.addSpan(0x1810, 0x1819);
        categoryLo.addSpan(0x1843, 0x1843);
        categoryLo.addSpan(0x1885, 0x1886);
        categoryLo.addSpan(0x18a9, 0x18a9);
        categoryLo.addSpan(0x1946, 0x194f);
        categoryLo.addSpan(0x19de, 0x19ff);
        categoryLo.addSpan(0x1a1e, 0x1a1f);
        categoryLo.addSpan(0x1b04, 0x1b04);
        categoryLo.addSpan(0x1b43, 0x1b44);
        categoryLo.addSpan(0x1b82, 0x1b82);
        categoryLo.addSpan(0x1bab, 0x1bad);
        categoryLo.addSpan(0x1bb0, 0x1bb9);
        categoryLo.addSpan(0x1bfc, 0x1bff);
        categoryLo.addSpan(0x1c40, 0x1c49);
        categoryLo.addSpan(0x1c50, 0x1c59);
        categoryLo.addSpan(0x1ce2, 0x1ce8);
        categoryLo.addSpan(0x1ced, 0x1ced);
        categoryLo.addSpan(0x1cf4, 0x1cf4);
        categoryLo.addSpan(0x2134, 0x2134);
        categoryLo.addSpan(0x2d00, 0x2d2d);
        categoryLo.addSpan(0x2d7f, 0x2d7f);
        categoryLo.addSpan(0x3005, 0x3005);
        categoryLo.addSpan(0x303b, 0x303b);
        categoryLo.addSpan(0x303e, 0x303f);
        categoryLo.addSpan(0x309d, 0x309e);
        categoryLo.addSpan(0x30a0, 0x30a0);
        categoryLo.addSpan(0x30fc, 0x30fe);
        categoryLo.addSpan(0x3196, 0x319f);
        categoryLo.addSpan(0x31c0, 0x31e3);
        categoryLo.addSpan(0x32c0, 0x33ff);
        categoryLo.addSpan(0x4dc0, 0x4dff);
        categoryLo.addSpan(0xa015, 0xa015);
        categoryLo.addSpan(0xa490, 0xa4c6);
        categoryLo.addSpan(0xa4fe, 0xa4ff);
        categoryLo.addSpan(0xa60d, 0xa60f);
        categoryLo.addSpan(0xa620, 0xa629);
        categoryLo.addSpan(0xa66d, 0xa66d);
        categoryLo.addSpan(0xa69e, 0xa69f);
        categoryLo.addSpan(0xa78e, 0xa78e);
        categoryLo.addSpan(0xa7b7, 0xa7b7);
        categoryLo.addSpan(0xa7fa, 0xa7fa);
        categoryLo.addSpan(0xa802, 0xa802);
        categoryLo.addSpan(0xa806, 0xa806);
        categoryLo.addSpan(0xa80b, 0xa80b);
        categoryLo.addSpan(0xa839, 0xa839);
        categoryLo.addSpan(0xa880, 0xa881);
        categoryLo.addSpan(0xa8e0, 0xa8f1);
        categoryLo.addSpan(0xa8f8, 0xa8fa);
        categoryLo.addSpan(0xa8fc, 0xa8fc);
        categoryLo.addSpan(0xa900, 0xa909);
        categoryLo.addSpan(0xa92e, 0xa92f);
        categoryLo.addSpan(0xa95f, 0xa95f);
        categoryLo.addSpan(0xa983, 0xa983);
        categoryLo.addSpan(0xa9de, 0xa9df);
        categoryLo.addSpan(0xa9e6, 0xa9e6);
        categoryLo.addSpan(0xa9f0, 0xa9f9);
        categoryLo.addSpan(0xaa35, 0xaa36);
        categoryLo.addSpan(0xaa43, 0xaa43);
        categoryLo.addSpan(0xaa5c, 0xaa5f);
        categoryLo.addSpan(0xaa70, 0xaa70);
        categoryLo.addSpan(0xaa77, 0xaa79);
        categoryLo.addSpan(0xaa7d, 0xaa7d);
        categoryLo.addSpan(0xaab0, 0xaab0);
        categoryLo.addSpan(0xaab2, 0xaab4);
        categoryLo.addSpan(0xaab7, 0xaab8);
        categoryLo.addSpan(0xaabe, 0xaabf);
        categoryLo.addSpan(0xaac1, 0xaac1);
        categoryLo.addSpan(0xaade, 0xaadf);
        categoryLo.addSpan(0xaaf0, 0xaaf1);
        categoryLo.addSpan(0xaaf6, 0xaaf6);
        categoryLo.addSpan(0xab60, 0xabbf);
        categoryLo.addSpan(0xabf0, 0xabf9);
        categoryLo.addSpan(0xe000, 0xf8ff);
        categoryLo.addSpan(0xfb00, 0xfb17);
        categoryLo.addSpan(0xfb1e, 0xfb1e);
        categoryLo.addSpan(0xfb29, 0xfb29);
        categoryLo.addSpan(0xfbb2, 0xfbc1);
        categoryLo.addSpan(0xfd3f, 0xfd3f);
        categoryLo.addSpan(0xfe6a, 0xfe6b);
        categoryLo.addSpan(0xff64, 0xff65);
        categoryLo.addSpan(0xff70, 0xff70);
        categoryLo.addSpan(0xff9e, 0xff9f);
        categoryLo.addSpan(0xfffc, 0xfffd);
        categoryLo.addSpan(0x000101fd, 0x000101fd);
        categoryLo.addSpan(0x000102e1, 0x000102fb);
        categoryLo.addSpan(0x00010320, 0x00010323);
        categoryLo.addSpan(0x00010341, 0x00010341);
        categoryLo.addSpan(0x0001034a, 0x0001034a);
        categoryLo.addSpan(0x00010376, 0x0001037a);
        categoryLo.addSpan(0x0001039f, 0x0001039f);
        categoryLo.addSpan(0x00010428, 0x0001044f);
        categoryLo.addSpan(0x000104d8, 0x000104fb);
        categoryLo.addSpan(0x0001056f, 0x0001056f);
        categoryLo.addSpan(0x00010858, 0x0001085f);
        categoryLo.addSpan(0x00010879, 0x0001087f);
        categoryLo.addSpan(0x000108a7, 0x000108af);
        categoryLo.addSpan(0x000108fb, 0x000108ff);
        categoryLo.addSpan(0x0001091f, 0x0001091f);
        categoryLo.addSpan(0x0001093f, 0x0001093f);
        categoryLo.addSpan(0x000109bc, 0x000109bd);
        categoryLo.addSpan(0x000109c0, 0x000109ff);
        categoryLo.addSpan(0x00010a01, 0x00010a0f);
        categoryLo.addSpan(0x00010a50, 0x00010a58);
        categoryLo.addSpan(0x00010a7f, 0x00010a7f);
        categoryLo.addSpan(0x00010a9d, 0x00010a9f);
        categoryLo.addSpan(0x00010ac8, 0x00010ac8);
        categoryLo.addSpan(0x00010af0, 0x00010af6);
        categoryLo.addSpan(0x00010b39, 0x00010b3f);
        categoryLo.addSpan(0x00010b58, 0x00010b5f);
        categoryLo.addSpan(0x00010b78, 0x00010b7f);
        categoryLo.addSpan(0x00010ba9, 0x00010baf);
        categoryLo.addSpan(0x00011002, 0x00011002);
        categoryLo.addSpan(0x00011082, 0x00011082);
        categoryLo.addSpan(0x000110be, 0x000110c1);
        categoryLo.addSpan(0x00011100, 0x00011102);
        categoryLo.addSpan(0x00011140, 0x00011143);
        categoryLo.addSpan(0x00011174, 0x00011175);
        categoryLo.addSpan(0x00011182, 0x00011182);
        categoryLo.addSpan(0x000111bf, 0x000111c0);
        categoryLo.addSpan(0x000111d0, 0x000111d9);
        categoryLo.addSpan(0x000111db, 0x000111db);
        categoryLo.addSpan(0x000111e1, 0x000111f4);
        categoryLo.addSpan(0x0001123e, 0x0001123e);
        categoryLo.addSpan(0x000112a9, 0x000112a9);
        categoryLo.addSpan(0x00011302, 0x00011303);
        categoryLo.addSpan(0x0001133c, 0x0001133c);
        categoryLo.addSpan(0x00011341, 0x0001134d);
        categoryLo.addSpan(0x00011357, 0x00011357);
        categoryLo.addSpan(0x00011366, 0x00011374);
        categoryLo.addSpan(0x00011446, 0x00011446);
        categoryLo.addSpan(0x0001145b, 0x0001145d);
        categoryLo.addSpan(0x000114c2, 0x000114c3);
        categoryLo.addSpan(0x000114c6, 0x000114c6);
        categoryLo.addSpan(0x000114d0, 0x000114d9);
        categoryLo.addSpan(0x000115c1, 0x000115d7);
        categoryLo.addSpan(0x000115dc, 0x000115dd);
        categoryLo.addSpan(0x00011641, 0x00011643);
        categoryLo.addSpan(0x00011660, 0x0001166c);
        categoryLo.addSpan(0x000116c0, 0x000116c9);
        categoryLo.addSpan(0x000118ea, 0x000118f2);
        categoryLo.addSpan(0x00011a09, 0x00011a0a);
        categoryLo.addSpan(0x00011a39, 0x00011a39);
        categoryLo.addSpan(0x00011a47, 0x00011a47);
        categoryLo.addSpan(0x00011a59, 0x00011a5b);
        categoryLo.addSpan(0x00011a9a, 0x00011aa2);
        categoryLo.addSpan(0x00011c3f, 0x00011c3f);
        categoryLo.addSpan(0x00011c70, 0x00011c71);
        categoryLo.addSpan(0x00011cb5, 0x00011cb6);
        categoryLo.addSpan(0x00011d31, 0x00011d45);
        categoryLo.addSpan(0x00011d50, 0x00011d59);
        categoryLo.addSpan(0x00012470, 0x00012474);
        categoryLo.addSpan(0x00016a6e, 0x00016a6f);
        categoryLo.addSpan(0x00016af5, 0x00016af5);
        categoryLo.addSpan(0x00016b5b, 0x00016b61);
        categoryLo.addSpan(0x00016f93, 0x00016fe1);
        categoryLo.addSpan(0x0001da9b, 0x0001e02a);
        categoryLo.addSpan(0x0001e95e, 0x0001e95f);
        categoryLo.addSpan(0x0001f400, 0x0001f9e6);
        return categoryLo;
    }

    /**
     * The Unicode category Lt
     */
    private static UnicodeCategory categoryLt = null;

    /**
     * Gets the Unicode category Lt
     *
     * @return The Unicode category Lt
     */
    public static UnicodeCategory getLt() {
        if (categoryLt != null)
            return categoryLt;
        categoryLt = new UnicodeCategory("Lt");
        categoryLt.addSpan(0x01c4, 0x01c4);
        categoryLt.addSpan(0x01c7, 0x01c7);
        categoryLt.addSpan(0x01ca, 0x01ca);
        categoryLt.addSpan(0x01f1, 0x01f1);
        categoryLt.addSpan(0x1f70, 0x1f87);
        categoryLt.addSpan(0x1f90, 0x1f97);
        categoryLt.addSpan(0x1fa0, 0x1fa7);
        categoryLt.addSpan(0x1fb8, 0x1fbb);
        categoryLt.addSpan(0x1fc8, 0x1fcb);
        categoryLt.addSpan(0x1ff8, 0x1ffb);
        return categoryLt;
    }

    /**
     * The Unicode category Lu
     */
    private static UnicodeCategory categoryLu = null;

    /**
     * Gets the Unicode category Lu
     *
     * @return The Unicode category Lu
     */
    public static UnicodeCategory getLu() {
        if (categoryLu != null)
            return categoryLu;
        categoryLu = new UnicodeCategory("Lu");
        categoryLu.addSpan(0x003f, 0x0040);
        categoryLu.addSpan(0x00bf, 0x00bf);
        categoryLu.addSpan(0x00d7, 0x00d7);
        categoryLu.addSpan(0x00f8, 0x00ff);
        categoryLu.addSpan(0x0101, 0x0101);
        categoryLu.addSpan(0x0103, 0x0103);
        categoryLu.addSpan(0x0105, 0x0105);
        categoryLu.addSpan(0x0107, 0x0107);
        categoryLu.addSpan(0x0109, 0x0109);
        categoryLu.addSpan(0x010b, 0x010b);
        categoryLu.addSpan(0x010d, 0x010d);
        categoryLu.addSpan(0x010f, 0x010f);
        categoryLu.addSpan(0x0111, 0x0111);
        categoryLu.addSpan(0x0113, 0x0113);
        categoryLu.addSpan(0x0115, 0x0115);
        categoryLu.addSpan(0x0117, 0x0117);
        categoryLu.addSpan(0x0119, 0x0119);
        categoryLu.addSpan(0x011b, 0x011b);
        categoryLu.addSpan(0x011d, 0x011d);
        categoryLu.addSpan(0x011f, 0x011f);
        categoryLu.addSpan(0x0121, 0x0121);
        categoryLu.addSpan(0x0123, 0x0123);
        categoryLu.addSpan(0x0125, 0x0125);
        categoryLu.addSpan(0x0127, 0x0127);
        categoryLu.addSpan(0x0129, 0x0129);
        categoryLu.addSpan(0x012b, 0x012b);
        categoryLu.addSpan(0x012d, 0x012d);
        categoryLu.addSpan(0x012f, 0x012f);
        categoryLu.addSpan(0x0131, 0x0131);
        categoryLu.addSpan(0x0133, 0x0133);
        categoryLu.addSpan(0x0135, 0x0135);
        categoryLu.addSpan(0x0137, 0x0138);
        categoryLu.addSpan(0x013a, 0x013a);
        categoryLu.addSpan(0x013c, 0x013c);
        categoryLu.addSpan(0x013e, 0x013e);
        categoryLu.addSpan(0x0140, 0x0140);
        categoryLu.addSpan(0x0142, 0x0142);
        categoryLu.addSpan(0x0144, 0x0144);
        categoryLu.addSpan(0x0146, 0x0146);
        categoryLu.addSpan(0x0148, 0x0149);
        categoryLu.addSpan(0x014b, 0x014b);
        categoryLu.addSpan(0x014d, 0x014d);
        categoryLu.addSpan(0x014f, 0x014f);
        categoryLu.addSpan(0x0151, 0x0151);
        categoryLu.addSpan(0x0153, 0x0153);
        categoryLu.addSpan(0x0155, 0x0155);
        categoryLu.addSpan(0x0157, 0x0157);
        categoryLu.addSpan(0x0159, 0x0159);
        categoryLu.addSpan(0x015b, 0x015b);
        categoryLu.addSpan(0x015d, 0x015d);
        categoryLu.addSpan(0x015f, 0x015f);
        categoryLu.addSpan(0x0161, 0x0161);
        categoryLu.addSpan(0x0163, 0x0163);
        categoryLu.addSpan(0x0165, 0x0165);
        categoryLu.addSpan(0x0167, 0x0167);
        categoryLu.addSpan(0x0169, 0x0169);
        categoryLu.addSpan(0x016b, 0x016b);
        categoryLu.addSpan(0x016d, 0x016d);
        categoryLu.addSpan(0x016f, 0x016f);
        categoryLu.addSpan(0x0171, 0x0171);
        categoryLu.addSpan(0x0173, 0x0173);
        categoryLu.addSpan(0x0175, 0x0175);
        categoryLu.addSpan(0x0177, 0x0177);
        categoryLu.addSpan(0x017a, 0x017a);
        categoryLu.addSpan(0x017c, 0x017c);
        categoryLu.addSpan(0x017e, 0x0180);
        categoryLu.addSpan(0x0183, 0x0183);
        categoryLu.addSpan(0x0185, 0x0185);
        categoryLu.addSpan(0x0188, 0x0188);
        categoryLu.addSpan(0x018c, 0x018d);
        categoryLu.addSpan(0x0192, 0x0192);
        categoryLu.addSpan(0x0195, 0x0195);
        categoryLu.addSpan(0x0199, 0x019b);
        categoryLu.addSpan(0x019e, 0x019e);
        categoryLu.addSpan(0x01a1, 0x01a1);
        categoryLu.addSpan(0x01a3, 0x01a3);
        categoryLu.addSpan(0x01a5, 0x01a5);
        categoryLu.addSpan(0x01a8, 0x01a8);
        categoryLu.addSpan(0x01aa, 0x01ab);
        categoryLu.addSpan(0x01ad, 0x01ad);
        categoryLu.addSpan(0x01b0, 0x01b0);
        categoryLu.addSpan(0x01b4, 0x01b4);
        categoryLu.addSpan(0x01b6, 0x01b6);
        categoryLu.addSpan(0x01bb, 0x01bb);
        categoryLu.addSpan(0x01c0, 0x01c3);
        categoryLu.addSpan(0x01c6, 0x01c6);
        categoryLu.addSpan(0x01c9, 0x01c9);
        categoryLu.addSpan(0x01cc, 0x01cc);
        categoryLu.addSpan(0x01ce, 0x01ce);
        categoryLu.addSpan(0x01d0, 0x01d0);
        categoryLu.addSpan(0x01d2, 0x01d2);
        categoryLu.addSpan(0x01d4, 0x01d4);
        categoryLu.addSpan(0x01d6, 0x01d6);
        categoryLu.addSpan(0x01d8, 0x01d8);
        categoryLu.addSpan(0x01da, 0x01da);
        categoryLu.addSpan(0x01dc, 0x01dd);
        categoryLu.addSpan(0x01df, 0x01df);
        categoryLu.addSpan(0x01e1, 0x01e1);
        categoryLu.addSpan(0x01e3, 0x01e3);
        categoryLu.addSpan(0x01e5, 0x01e5);
        categoryLu.addSpan(0x01e7, 0x01e7);
        categoryLu.addSpan(0x01e9, 0x01e9);
        categoryLu.addSpan(0x01eb, 0x01eb);
        categoryLu.addSpan(0x01ed, 0x01ed);
        categoryLu.addSpan(0x01ef, 0x01f0);
        categoryLu.addSpan(0x01f3, 0x01f3);
        categoryLu.addSpan(0x01f5, 0x01f5);
        categoryLu.addSpan(0x01f9, 0x01f9);
        categoryLu.addSpan(0x01fb, 0x01fb);
        categoryLu.addSpan(0x01fd, 0x01fd);
        categoryLu.addSpan(0x01ff, 0x01ff);
        categoryLu.addSpan(0x0201, 0x0201);
        categoryLu.addSpan(0x0203, 0x0203);
        categoryLu.addSpan(0x0205, 0x0205);
        categoryLu.addSpan(0x0207, 0x0207);
        categoryLu.addSpan(0x0209, 0x0209);
        categoryLu.addSpan(0x020b, 0x020b);
        categoryLu.addSpan(0x020d, 0x020d);
        categoryLu.addSpan(0x020f, 0x020f);
        categoryLu.addSpan(0x0211, 0x0211);
        categoryLu.addSpan(0x0213, 0x0213);
        categoryLu.addSpan(0x0215, 0x0215);
        categoryLu.addSpan(0x0217, 0x0217);
        categoryLu.addSpan(0x0219, 0x0219);
        categoryLu.addSpan(0x021b, 0x021b);
        categoryLu.addSpan(0x021d, 0x021d);
        categoryLu.addSpan(0x021f, 0x021f);
        categoryLu.addSpan(0x0221, 0x0221);
        categoryLu.addSpan(0x0223, 0x0223);
        categoryLu.addSpan(0x0225, 0x0225);
        categoryLu.addSpan(0x0227, 0x0227);
        categoryLu.addSpan(0x0229, 0x0229);
        categoryLu.addSpan(0x022b, 0x022b);
        categoryLu.addSpan(0x022d, 0x022d);
        categoryLu.addSpan(0x022f, 0x022f);
        categoryLu.addSpan(0x0231, 0x0231);
        categoryLu.addSpan(0x0233, 0x0239);
        categoryLu.addSpan(0x023c, 0x023c);
        categoryLu.addSpan(0x023f, 0x0240);
        categoryLu.addSpan(0x0242, 0x0242);
        categoryLu.addSpan(0x0247, 0x0247);
        categoryLu.addSpan(0x0249, 0x0249);
        categoryLu.addSpan(0x024b, 0x024b);
        categoryLu.addSpan(0x024d, 0x024d);
        categoryLu.addSpan(0x0300, 0x036f);
        categoryLu.addSpan(0x0371, 0x0371);
        categoryLu.addSpan(0x0375, 0x0375);
        categoryLu.addSpan(0x037e, 0x037e);
        categoryLu.addSpan(0x0384, 0x0385);
        categoryLu.addSpan(0x0387, 0x0387);
        categoryLu.addSpan(0x0390, 0x0390);
        categoryLu.addSpan(0x03ac, 0x03ce);
        categoryLu.addSpan(0x03d0, 0x03d1);
        categoryLu.addSpan(0x03d5, 0x03d7);
        categoryLu.addSpan(0x03d9, 0x03d9);
        categoryLu.addSpan(0x03db, 0x03db);
        categoryLu.addSpan(0x03dd, 0x03dd);
        categoryLu.addSpan(0x03df, 0x03df);
        categoryLu.addSpan(0x03e1, 0x03e1);
        categoryLu.addSpan(0x03e3, 0x03e3);
        categoryLu.addSpan(0x03e5, 0x03e5);
        categoryLu.addSpan(0x03e7, 0x03e7);
        categoryLu.addSpan(0x03e9, 0x03e9);
        categoryLu.addSpan(0x03eb, 0x03eb);
        categoryLu.addSpan(0x03ed, 0x03ed);
        categoryLu.addSpan(0x03ef, 0x03f3);
        categoryLu.addSpan(0x03f6, 0x03f6);
        categoryLu.addSpan(0x03f8, 0x03f8);
        categoryLu.addSpan(0x03fb, 0x03fc);
        categoryLu.addSpan(0x0430, 0x045f);
        categoryLu.addSpan(0x0461, 0x0461);
        categoryLu.addSpan(0x0463, 0x0463);
        categoryLu.addSpan(0x0465, 0x0465);
        categoryLu.addSpan(0x0467, 0x0467);
        categoryLu.addSpan(0x0469, 0x0469);
        categoryLu.addSpan(0x046b, 0x046b);
        categoryLu.addSpan(0x046d, 0x046d);
        categoryLu.addSpan(0x046f, 0x046f);
        categoryLu.addSpan(0x0471, 0x0471);
        categoryLu.addSpan(0x0473, 0x0473);
        categoryLu.addSpan(0x0475, 0x0475);
        categoryLu.addSpan(0x0477, 0x0477);
        categoryLu.addSpan(0x0479, 0x0479);
        categoryLu.addSpan(0x047b, 0x047b);
        categoryLu.addSpan(0x047d, 0x047d);
        categoryLu.addSpan(0x047f, 0x047f);
        categoryLu.addSpan(0x0488, 0x0489);
        categoryLu.addSpan(0x048b, 0x048b);
        categoryLu.addSpan(0x048d, 0x048d);
        categoryLu.addSpan(0x048f, 0x048f);
        categoryLu.addSpan(0x0491, 0x0491);
        categoryLu.addSpan(0x0493, 0x0493);
        categoryLu.addSpan(0x0495, 0x0495);
        categoryLu.addSpan(0x0497, 0x0497);
        categoryLu.addSpan(0x0499, 0x0499);
        categoryLu.addSpan(0x049b, 0x049b);
        categoryLu.addSpan(0x049d, 0x049d);
        categoryLu.addSpan(0x049f, 0x049f);
        categoryLu.addSpan(0x04a1, 0x04a1);
        categoryLu.addSpan(0x04a3, 0x04a3);
        categoryLu.addSpan(0x04a5, 0x04a5);
        categoryLu.addSpan(0x04a7, 0x04a7);
        categoryLu.addSpan(0x04a9, 0x04a9);
        categoryLu.addSpan(0x04ab, 0x04ab);
        categoryLu.addSpan(0x04ad, 0x04ad);
        categoryLu.addSpan(0x04af, 0x04af);
        categoryLu.addSpan(0x04b1, 0x04b1);
        categoryLu.addSpan(0x04b3, 0x04b3);
        categoryLu.addSpan(0x04b5, 0x04b5);
        categoryLu.addSpan(0x04b7, 0x04b7);
        categoryLu.addSpan(0x04b9, 0x04b9);
        categoryLu.addSpan(0x04bb, 0x04bb);
        categoryLu.addSpan(0x04bd, 0x04bd);
        categoryLu.addSpan(0x04bf, 0x04bf);
        categoryLu.addSpan(0x04c2, 0x04c2);
        categoryLu.addSpan(0x04c4, 0x04c4);
        categoryLu.addSpan(0x04c6, 0x04c6);
        categoryLu.addSpan(0x04c8, 0x04c8);
        categoryLu.addSpan(0x04ca, 0x04ca);
        categoryLu.addSpan(0x04cc, 0x04cc);
        categoryLu.addSpan(0x04ce, 0x04cf);
        categoryLu.addSpan(0x04d1, 0x04d1);
        categoryLu.addSpan(0x04d3, 0x04d3);
        categoryLu.addSpan(0x04d5, 0x04d5);
        categoryLu.addSpan(0x04d7, 0x04d7);
        categoryLu.addSpan(0x04d9, 0x04d9);
        categoryLu.addSpan(0x04db, 0x04db);
        categoryLu.addSpan(0x04dd, 0x04dd);
        categoryLu.addSpan(0x04df, 0x04df);
        categoryLu.addSpan(0x04e1, 0x04e1);
        categoryLu.addSpan(0x04e3, 0x04e3);
        categoryLu.addSpan(0x04e5, 0x04e5);
        categoryLu.addSpan(0x04e7, 0x04e7);
        categoryLu.addSpan(0x04e9, 0x04e9);
        categoryLu.addSpan(0x04eb, 0x04eb);
        categoryLu.addSpan(0x04ed, 0x04ed);
        categoryLu.addSpan(0x04ef, 0x04ef);
        categoryLu.addSpan(0x04f1, 0x04f1);
        categoryLu.addSpan(0x04f3, 0x04f3);
        categoryLu.addSpan(0x04f5, 0x04f5);
        categoryLu.addSpan(0x04f7, 0x04f7);
        categoryLu.addSpan(0x04f9, 0x04f9);
        categoryLu.addSpan(0x04fb, 0x04fb);
        categoryLu.addSpan(0x04fd, 0x04fd);
        categoryLu.addSpan(0x04ff, 0x04ff);
        categoryLu.addSpan(0x0501, 0x0501);
        categoryLu.addSpan(0x0503, 0x0503);
        categoryLu.addSpan(0x0505, 0x0505);
        categoryLu.addSpan(0x0507, 0x0507);
        categoryLu.addSpan(0x0509, 0x0509);
        categoryLu.addSpan(0x050b, 0x050b);
        categoryLu.addSpan(0x050d, 0x050d);
        categoryLu.addSpan(0x050f, 0x050f);
        categoryLu.addSpan(0x0511, 0x0511);
        categoryLu.addSpan(0x0513, 0x0513);
        categoryLu.addSpan(0x0515, 0x0515);
        categoryLu.addSpan(0x0517, 0x0517);
        categoryLu.addSpan(0x0519, 0x0519);
        categoryLu.addSpan(0x051b, 0x051b);
        categoryLu.addSpan(0x051d, 0x051d);
        categoryLu.addSpan(0x051f, 0x051f);
        categoryLu.addSpan(0x0521, 0x0521);
        categoryLu.addSpan(0x0523, 0x0523);
        categoryLu.addSpan(0x0525, 0x0525);
        categoryLu.addSpan(0x0527, 0x0527);
        categoryLu.addSpan(0x0529, 0x0529);
        categoryLu.addSpan(0x052b, 0x052b);
        categoryLu.addSpan(0x052d, 0x052d);
        categoryLu.addSpan(0x052f, 0x052f);
        categoryLu.addSpan(0x109e, 0x109f);
        categoryLu.addSpan(0x1390, 0x1399);
        categoryLu.addSpan(0x1dc0, 0x1dff);
        categoryLu.addSpan(0x1e01, 0x1e01);
        categoryLu.addSpan(0x1e03, 0x1e03);
        categoryLu.addSpan(0x1e05, 0x1e05);
        categoryLu.addSpan(0x1e07, 0x1e07);
        categoryLu.addSpan(0x1e09, 0x1e09);
        categoryLu.addSpan(0x1e0b, 0x1e0b);
        categoryLu.addSpan(0x1e0d, 0x1e0d);
        categoryLu.addSpan(0x1e0f, 0x1e0f);
        categoryLu.addSpan(0x1e11, 0x1e11);
        categoryLu.addSpan(0x1e13, 0x1e13);
        categoryLu.addSpan(0x1e15, 0x1e15);
        categoryLu.addSpan(0x1e17, 0x1e17);
        categoryLu.addSpan(0x1e19, 0x1e19);
        categoryLu.addSpan(0x1e1b, 0x1e1b);
        categoryLu.addSpan(0x1e1d, 0x1e1d);
        categoryLu.addSpan(0x1e1f, 0x1e1f);
        categoryLu.addSpan(0x1e21, 0x1e21);
        categoryLu.addSpan(0x1e23, 0x1e23);
        categoryLu.addSpan(0x1e25, 0x1e25);
        categoryLu.addSpan(0x1e27, 0x1e27);
        categoryLu.addSpan(0x1e29, 0x1e29);
        categoryLu.addSpan(0x1e2b, 0x1e2b);
        categoryLu.addSpan(0x1e2d, 0x1e2d);
        categoryLu.addSpan(0x1e2f, 0x1e2f);
        categoryLu.addSpan(0x1e31, 0x1e31);
        categoryLu.addSpan(0x1e33, 0x1e33);
        categoryLu.addSpan(0x1e35, 0x1e35);
        categoryLu.addSpan(0x1e37, 0x1e37);
        categoryLu.addSpan(0x1e39, 0x1e39);
        categoryLu.addSpan(0x1e3b, 0x1e3b);
        categoryLu.addSpan(0x1e3d, 0x1e3d);
        categoryLu.addSpan(0x1e3f, 0x1e3f);
        categoryLu.addSpan(0x1e41, 0x1e41);
        categoryLu.addSpan(0x1e43, 0x1e43);
        categoryLu.addSpan(0x1e45, 0x1e45);
        categoryLu.addSpan(0x1e47, 0x1e47);
        categoryLu.addSpan(0x1e49, 0x1e49);
        categoryLu.addSpan(0x1e4b, 0x1e4b);
        categoryLu.addSpan(0x1e4d, 0x1e4d);
        categoryLu.addSpan(0x1e4f, 0x1e4f);
        categoryLu.addSpan(0x1e51, 0x1e51);
        categoryLu.addSpan(0x1e53, 0x1e53);
        categoryLu.addSpan(0x1e55, 0x1e55);
        categoryLu.addSpan(0x1e57, 0x1e57);
        categoryLu.addSpan(0x1e59, 0x1e59);
        categoryLu.addSpan(0x1e5b, 0x1e5b);
        categoryLu.addSpan(0x1e5d, 0x1e5d);
        categoryLu.addSpan(0x1e5f, 0x1e5f);
        categoryLu.addSpan(0x1e61, 0x1e61);
        categoryLu.addSpan(0x1e63, 0x1e63);
        categoryLu.addSpan(0x1e65, 0x1e65);
        categoryLu.addSpan(0x1e67, 0x1e67);
        categoryLu.addSpan(0x1e69, 0x1e69);
        categoryLu.addSpan(0x1e6b, 0x1e6b);
        categoryLu.addSpan(0x1e6d, 0x1e6d);
        categoryLu.addSpan(0x1e6f, 0x1e6f);
        categoryLu.addSpan(0x1e71, 0x1e71);
        categoryLu.addSpan(0x1e73, 0x1e73);
        categoryLu.addSpan(0x1e75, 0x1e75);
        categoryLu.addSpan(0x1e77, 0x1e77);
        categoryLu.addSpan(0x1e79, 0x1e79);
        categoryLu.addSpan(0x1e7b, 0x1e7b);
        categoryLu.addSpan(0x1e7d, 0x1e7d);
        categoryLu.addSpan(0x1e7f, 0x1e7f);
        categoryLu.addSpan(0x1e81, 0x1e81);
        categoryLu.addSpan(0x1e83, 0x1e83);
        categoryLu.addSpan(0x1e85, 0x1e85);
        categoryLu.addSpan(0x1e87, 0x1e87);
        categoryLu.addSpan(0x1e89, 0x1e89);
        categoryLu.addSpan(0x1e8b, 0x1e8b);
        categoryLu.addSpan(0x1e8d, 0x1e8d);
        categoryLu.addSpan(0x1e8f, 0x1e8f);
        categoryLu.addSpan(0x1e91, 0x1e91);
        categoryLu.addSpan(0x1e93, 0x1e93);
        categoryLu.addSpan(0x1e95, 0x1e9d);
        categoryLu.addSpan(0x1e9f, 0x1e9f);
        categoryLu.addSpan(0x1ea1, 0x1ea1);
        categoryLu.addSpan(0x1ea3, 0x1ea3);
        categoryLu.addSpan(0x1ea5, 0x1ea5);
        categoryLu.addSpan(0x1ea7, 0x1ea7);
        categoryLu.addSpan(0x1ea9, 0x1ea9);
        categoryLu.addSpan(0x1eab, 0x1eab);
        categoryLu.addSpan(0x1ead, 0x1ead);
        categoryLu.addSpan(0x1eaf, 0x1eaf);
        categoryLu.addSpan(0x1eb1, 0x1eb1);
        categoryLu.addSpan(0x1eb3, 0x1eb3);
        categoryLu.addSpan(0x1eb5, 0x1eb5);
        categoryLu.addSpan(0x1eb7, 0x1eb7);
        categoryLu.addSpan(0x1eb9, 0x1eb9);
        categoryLu.addSpan(0x1ebb, 0x1ebb);
        categoryLu.addSpan(0x1ebd, 0x1ebd);
        categoryLu.addSpan(0x1ebf, 0x1ebf);
        categoryLu.addSpan(0x1ec1, 0x1ec1);
        categoryLu.addSpan(0x1ec3, 0x1ec3);
        categoryLu.addSpan(0x1ec5, 0x1ec5);
        categoryLu.addSpan(0x1ec7, 0x1ec7);
        categoryLu.addSpan(0x1ec9, 0x1ec9);
        categoryLu.addSpan(0x1ecb, 0x1ecb);
        categoryLu.addSpan(0x1ecd, 0x1ecd);
        categoryLu.addSpan(0x1ecf, 0x1ecf);
        categoryLu.addSpan(0x1ed1, 0x1ed1);
        categoryLu.addSpan(0x1ed3, 0x1ed3);
        categoryLu.addSpan(0x1ed5, 0x1ed5);
        categoryLu.addSpan(0x1ed7, 0x1ed7);
        categoryLu.addSpan(0x1ed9, 0x1ed9);
        categoryLu.addSpan(0x1edb, 0x1edb);
        categoryLu.addSpan(0x1edd, 0x1edd);
        categoryLu.addSpan(0x1edf, 0x1edf);
        categoryLu.addSpan(0x1ee1, 0x1ee1);
        categoryLu.addSpan(0x1ee3, 0x1ee3);
        categoryLu.addSpan(0x1ee5, 0x1ee5);
        categoryLu.addSpan(0x1ee7, 0x1ee7);
        categoryLu.addSpan(0x1ee9, 0x1ee9);
        categoryLu.addSpan(0x1eeb, 0x1eeb);
        categoryLu.addSpan(0x1eed, 0x1eed);
        categoryLu.addSpan(0x1eef, 0x1eef);
        categoryLu.addSpan(0x1ef1, 0x1ef1);
        categoryLu.addSpan(0x1ef3, 0x1ef3);
        categoryLu.addSpan(0x1ef5, 0x1ef5);
        categoryLu.addSpan(0x1ef7, 0x1ef7);
        categoryLu.addSpan(0x1ef9, 0x1ef9);
        categoryLu.addSpan(0x1efb, 0x1efb);
        categoryLu.addSpan(0x1efd, 0x1efd);
        categoryLu.addSpan(0x1eff, 0x1f07);
        categoryLu.addSpan(0x1f10, 0x1f15);
        categoryLu.addSpan(0x1f20, 0x1f27);
        categoryLu.addSpan(0x1f30, 0x1f37);
        categoryLu.addSpan(0x1f40, 0x1f45);
        categoryLu.addSpan(0x1f50, 0x1f57);
        categoryLu.addSpan(0x1f60, 0x1f67);
        categoryLu.addSpan(0x1fb0, 0x1fb7);
        categoryLu.addSpan(0x1fc2, 0x1fc7);
        categoryLu.addSpan(0x1fd0, 0x1fd7);
        categoryLu.addSpan(0x1fe0, 0x1fe7);
        categoryLu.addSpan(0x1ff2, 0x1ff7);
        categoryLu.addSpan(0x2100, 0x2101);
        categoryLu.addSpan(0x2103, 0x2106);
        categoryLu.addSpan(0x210a, 0x210a);
        categoryLu.addSpan(0x210e, 0x210f);
        categoryLu.addSpan(0x2114, 0x2114);
        categoryLu.addSpan(0x2118, 0x2118);
        categoryLu.addSpan(0x211e, 0x2123);
        categoryLu.addSpan(0x2125, 0x2125);
        categoryLu.addSpan(0x2127, 0x2127);
        categoryLu.addSpan(0x2129, 0x2129);
        categoryLu.addSpan(0x212f, 0x212f);
        categoryLu.addSpan(0x213c, 0x213d);
        categoryLu.addSpan(0x2140, 0x2144);
        categoryLu.addSpan(0x2160, 0x2182);
        categoryLu.addSpan(0x2b4d, 0x2bef);
        categoryLu.addSpan(0x2c30, 0x2c5e);
        categoryLu.addSpan(0x2c61, 0x2c61);
        categoryLu.addSpan(0x2c65, 0x2c66);
        categoryLu.addSpan(0x2c68, 0x2c68);
        categoryLu.addSpan(0x2c6a, 0x2c6a);
        categoryLu.addSpan(0x2c6c, 0x2c6c);
        categoryLu.addSpan(0x2c71, 0x2c71);
        categoryLu.addSpan(0x2c73, 0x2c74);
        categoryLu.addSpan(0x2c7c, 0x2c7d);
        categoryLu.addSpan(0x2c81, 0x2c81);
        categoryLu.addSpan(0x2c83, 0x2c83);
        categoryLu.addSpan(0x2c85, 0x2c85);
        categoryLu.addSpan(0x2c87, 0x2c87);
        categoryLu.addSpan(0x2c89, 0x2c89);
        categoryLu.addSpan(0x2c8b, 0x2c8b);
        categoryLu.addSpan(0x2c8d, 0x2c8d);
        categoryLu.addSpan(0x2c8f, 0x2c8f);
        categoryLu.addSpan(0x2c91, 0x2c91);
        categoryLu.addSpan(0x2c93, 0x2c93);
        categoryLu.addSpan(0x2c95, 0x2c95);
        categoryLu.addSpan(0x2c97, 0x2c97);
        categoryLu.addSpan(0x2c99, 0x2c99);
        categoryLu.addSpan(0x2c9b, 0x2c9b);
        categoryLu.addSpan(0x2c9d, 0x2c9d);
        categoryLu.addSpan(0x2c9f, 0x2c9f);
        categoryLu.addSpan(0x2ca1, 0x2ca1);
        categoryLu.addSpan(0x2ca3, 0x2ca3);
        categoryLu.addSpan(0x2ca5, 0x2ca5);
        categoryLu.addSpan(0x2ca7, 0x2ca7);
        categoryLu.addSpan(0x2ca9, 0x2ca9);
        categoryLu.addSpan(0x2cab, 0x2cab);
        categoryLu.addSpan(0x2cad, 0x2cad);
        categoryLu.addSpan(0x2caf, 0x2caf);
        categoryLu.addSpan(0x2cb1, 0x2cb1);
        categoryLu.addSpan(0x2cb3, 0x2cb3);
        categoryLu.addSpan(0x2cb5, 0x2cb5);
        categoryLu.addSpan(0x2cb7, 0x2cb7);
        categoryLu.addSpan(0x2cb9, 0x2cb9);
        categoryLu.addSpan(0x2cbb, 0x2cbb);
        categoryLu.addSpan(0x2cbd, 0x2cbd);
        categoryLu.addSpan(0x2cbf, 0x2cbf);
        categoryLu.addSpan(0x2cc1, 0x2cc1);
        categoryLu.addSpan(0x2cc3, 0x2cc3);
        categoryLu.addSpan(0x2cc5, 0x2cc5);
        categoryLu.addSpan(0x2cc7, 0x2cc7);
        categoryLu.addSpan(0x2cc9, 0x2cc9);
        categoryLu.addSpan(0x2ccb, 0x2ccb);
        categoryLu.addSpan(0x2ccd, 0x2ccd);
        categoryLu.addSpan(0x2ccf, 0x2ccf);
        categoryLu.addSpan(0x2cd1, 0x2cd1);
        categoryLu.addSpan(0x2cd3, 0x2cd3);
        categoryLu.addSpan(0x2cd5, 0x2cd5);
        categoryLu.addSpan(0x2cd7, 0x2cd7);
        categoryLu.addSpan(0x2cd9, 0x2cd9);
        categoryLu.addSpan(0x2cdb, 0x2cdb);
        categoryLu.addSpan(0x2cdd, 0x2cdd);
        categoryLu.addSpan(0x2cdf, 0x2cdf);
        categoryLu.addSpan(0x2ce1, 0x2ce1);
        categoryLu.addSpan(0x2ce5, 0x2cea);
        categoryLu.addSpan(0x2cec, 0x2cec);
        categoryLu.addSpan(0x2cef, 0x2cf1);
        categoryLu.addSpan(0xa62a, 0xa62b);
        categoryLu.addSpan(0xa641, 0xa641);
        categoryLu.addSpan(0xa643, 0xa643);
        categoryLu.addSpan(0xa645, 0xa645);
        categoryLu.addSpan(0xa647, 0xa647);
        categoryLu.addSpan(0xa649, 0xa649);
        categoryLu.addSpan(0xa64b, 0xa64b);
        categoryLu.addSpan(0xa64d, 0xa64d);
        categoryLu.addSpan(0xa64f, 0xa64f);
        categoryLu.addSpan(0xa651, 0xa651);
        categoryLu.addSpan(0xa653, 0xa653);
        categoryLu.addSpan(0xa655, 0xa655);
        categoryLu.addSpan(0xa657, 0xa657);
        categoryLu.addSpan(0xa659, 0xa659);
        categoryLu.addSpan(0xa65b, 0xa65b);
        categoryLu.addSpan(0xa65d, 0xa65d);
        categoryLu.addSpan(0xa65f, 0xa65f);
        categoryLu.addSpan(0xa661, 0xa661);
        categoryLu.addSpan(0xa663, 0xa663);
        categoryLu.addSpan(0xa665, 0xa665);
        categoryLu.addSpan(0xa667, 0xa667);
        categoryLu.addSpan(0xa669, 0xa669);
        categoryLu.addSpan(0xa66b, 0xa66b);
        categoryLu.addSpan(0xa67f, 0xa67f);
        categoryLu.addSpan(0xa681, 0xa681);
        categoryLu.addSpan(0xa683, 0xa683);
        categoryLu.addSpan(0xa685, 0xa685);
        categoryLu.addSpan(0xa687, 0xa687);
        categoryLu.addSpan(0xa689, 0xa689);
        categoryLu.addSpan(0xa68b, 0xa68b);
        categoryLu.addSpan(0xa68d, 0xa68d);
        categoryLu.addSpan(0xa68f, 0xa68f);
        categoryLu.addSpan(0xa691, 0xa691);
        categoryLu.addSpan(0xa693, 0xa693);
        categoryLu.addSpan(0xa695, 0xa695);
        categoryLu.addSpan(0xa697, 0xa697);
        categoryLu.addSpan(0xa699, 0xa699);
        categoryLu.addSpan(0xa720, 0xa721);
        categoryLu.addSpan(0xa723, 0xa723);
        categoryLu.addSpan(0xa725, 0xa725);
        categoryLu.addSpan(0xa727, 0xa727);
        categoryLu.addSpan(0xa729, 0xa729);
        categoryLu.addSpan(0xa72b, 0xa72b);
        categoryLu.addSpan(0xa72d, 0xa72d);
        categoryLu.addSpan(0xa72f, 0xa731);
        categoryLu.addSpan(0xa733, 0xa733);
        categoryLu.addSpan(0xa735, 0xa735);
        categoryLu.addSpan(0xa737, 0xa737);
        categoryLu.addSpan(0xa739, 0xa739);
        categoryLu.addSpan(0xa73b, 0xa73b);
        categoryLu.addSpan(0xa73d, 0xa73d);
        categoryLu.addSpan(0xa73f, 0xa73f);
        categoryLu.addSpan(0xa741, 0xa741);
        categoryLu.addSpan(0xa743, 0xa743);
        categoryLu.addSpan(0xa745, 0xa745);
        categoryLu.addSpan(0xa747, 0xa747);
        categoryLu.addSpan(0xa749, 0xa749);
        categoryLu.addSpan(0xa74b, 0xa74b);
        categoryLu.addSpan(0xa74d, 0xa74d);
        categoryLu.addSpan(0xa74f, 0xa74f);
        categoryLu.addSpan(0xa751, 0xa751);
        categoryLu.addSpan(0xa753, 0xa753);
        categoryLu.addSpan(0xa755, 0xa755);
        categoryLu.addSpan(0xa757, 0xa757);
        categoryLu.addSpan(0xa759, 0xa759);
        categoryLu.addSpan(0xa75b, 0xa75b);
        categoryLu.addSpan(0xa75d, 0xa75d);
        categoryLu.addSpan(0xa75f, 0xa75f);
        categoryLu.addSpan(0xa761, 0xa761);
        categoryLu.addSpan(0xa763, 0xa763);
        categoryLu.addSpan(0xa765, 0xa765);
        categoryLu.addSpan(0xa767, 0xa767);
        categoryLu.addSpan(0xa769, 0xa769);
        categoryLu.addSpan(0xa76b, 0xa76b);
        categoryLu.addSpan(0xa76d, 0xa76d);
        categoryLu.addSpan(0xa771, 0xa778);
        categoryLu.addSpan(0xa77a, 0xa77a);
        categoryLu.addSpan(0xa77c, 0xa77c);
        categoryLu.addSpan(0xa77f, 0xa77f);
        categoryLu.addSpan(0xa781, 0xa781);
        categoryLu.addSpan(0xa783, 0xa783);
        categoryLu.addSpan(0xa785, 0xa785);
        categoryLu.addSpan(0xa789, 0xa78a);
        categoryLu.addSpan(0xa78c, 0xa78c);
        categoryLu.addSpan(0xa78f, 0xa78f);
        categoryLu.addSpan(0xa791, 0xa791);
        categoryLu.addSpan(0xa793, 0xa795);
        categoryLu.addSpan(0xa797, 0xa797);
        categoryLu.addSpan(0xa799, 0xa799);
        categoryLu.addSpan(0xa79b, 0xa79b);
        categoryLu.addSpan(0xa79d, 0xa79d);
        categoryLu.addSpan(0xa79f, 0xa79f);
        categoryLu.addSpan(0xa7a1, 0xa7a1);
        categoryLu.addSpan(0xa7a3, 0xa7a3);
        categoryLu.addSpan(0xa7a5, 0xa7a5);
        categoryLu.addSpan(0xa7a7, 0xa7a7);
        categoryLu.addSpan(0xa7a9, 0xa7a9);
        categoryLu.addSpan(0xa7b5, 0xa7b5);
        categoryLu.addSpan(0xff1f, 0xff20);
        categoryLu.addSpan(0x000103d1, 0x000103d5);
        categoryLu.addSpan(0x000104a0, 0x000104a9);
        categoryLu.addSpan(0x00010c00, 0x00010c48);
        categoryLu.addSpan(0x0001173f, 0x0001173f);
        categoryLu.addSpan(0x0001d360, 0x0001d371);
        categoryLu.addSpan(0x0001d41a, 0x0001d433);
        categoryLu.addSpan(0x0001d44e, 0x0001d467);
        categoryLu.addSpan(0x0001d482, 0x0001d49b);
        categoryLu.addSpan(0x0001d4b6, 0x0001d4cf);
        categoryLu.addSpan(0x0001d4ea, 0x0001d503);
        categoryLu.addSpan(0x0001d51e, 0x0001d537);
        categoryLu.addSpan(0x0001d552, 0x0001d56b);
        categoryLu.addSpan(0x0001d586, 0x0001d59f);
        categoryLu.addSpan(0x0001d5ba, 0x0001d5d3);
        categoryLu.addSpan(0x0001d5ee, 0x0001d607);
        categoryLu.addSpan(0x0001d622, 0x0001d63b);
        categoryLu.addSpan(0x0001d656, 0x0001d66f);
        categoryLu.addSpan(0x0001d68a, 0x0001d6a5);
        categoryLu.addSpan(0x0001d6dc, 0x0001d6e1);
        categoryLu.addSpan(0x0001d716, 0x0001d71b);
        categoryLu.addSpan(0x0001d750, 0x0001d755);
        categoryLu.addSpan(0x0001d78a, 0x0001d78f);
        categoryLu.addSpan(0x0001d7c4, 0x0001d7c9);
        categoryLu.addSpan(0x0001e8d0, 0x0001e8d6);
        return categoryLu;
    }

    /**
     * The Unicode category Sc
     */
    private static UnicodeCategory categorySc = null;

    /**
     * Gets the Unicode category Sc
     *
     * @return The Unicode category Sc
     */
    public static UnicodeCategory getSc() {
        if (categorySc != null)
            return categorySc;
        categorySc = new UnicodeCategory("Sc");
        categorySc.addSpan(0x0021, 0x0023);
        categorySc.addSpan(0x00a1, 0x00a1);
        categorySc.addSpan(0x058d, 0x058e);
        categorySc.addSpan(0x0609, 0x060a);
        categorySc.addSpan(0x09f0, 0x09f1);
        categorySc.addSpan(0x09fa, 0x09fa);
        categorySc.addSpan(0x0af0, 0x0af0);
        categorySc.addSpan(0x0bf3, 0x0bf8);
        categorySc.addSpan(0x0e34, 0x0e3a);
        categorySc.addSpan(0x17d8, 0x17da);
        categorySc.addSpan(0x2090, 0x209c);
        categorySc.addSpan(0xa836, 0xa837);
        categorySc.addSpan(0xfd50, 0xfdfb);
        categorySc.addSpan(0xfe68, 0xfe68);
        categorySc.addSpan(0xff01, 0xff03);
        categorySc.addSpan(0xffa0, 0xffdc);
        categorySc.addSpan(0xffe4, 0xffe4);
        return categorySc;
    }

    /**
     * The Unicode category Mc
     */
    private static UnicodeCategory categoryMc = null;

    /**
     * Gets the Unicode category Mc
     *
     * @return The Unicode category Mc
     */
    public static UnicodeCategory getMc() {
        if (categoryMc != null)
            return categoryMc;
        categoryMc = new UnicodeCategory("Mc");
        categoryMc.addSpan(0x08e3, 0x0902);
        categoryMc.addSpan(0x093a, 0x093a);
        categoryMc.addSpan(0x093d, 0x093d);
        categoryMc.addSpan(0x0941, 0x0948);
        categoryMc.addSpan(0x094d, 0x094d);
        categoryMc.addSpan(0x0981, 0x0981);
        categoryMc.addSpan(0x09bd, 0x09bd);
        categoryMc.addSpan(0x09c1, 0x09c4);
        categoryMc.addSpan(0x09ce, 0x09ce);
        categoryMc.addSpan(0x0a01, 0x0a02);
        categoryMc.addSpan(0x0a3c, 0x0a3c);
        categoryMc.addSpan(0x0a75, 0x0a82);
        categoryMc.addSpan(0x0abd, 0x0abd);
        categoryMc.addSpan(0x0ac1, 0x0ac8);
        categoryMc.addSpan(0x0afa, 0x0b01);
        categoryMc.addSpan(0x0b3d, 0x0b3d);
        categoryMc.addSpan(0x0b3f, 0x0b3f);
        categoryMc.addSpan(0x0b41, 0x0b44);
        categoryMc.addSpan(0x0b4d, 0x0b56);
        categoryMc.addSpan(0x0b83, 0x0bb9);
        categoryMc.addSpan(0x0bc0, 0x0bc0);
        categoryMc.addSpan(0x0bd0, 0x0bd0);
        categoryMc.addSpan(0x0c00, 0x0c00);
        categoryMc.addSpan(0x0c3e, 0x0c40);
        categoryMc.addSpan(0x0c81, 0x0c81);
        categoryMc.addSpan(0x0cbd, 0x0cbd);
        categoryMc.addSpan(0x0cbf, 0x0cbf);
        categoryMc.addSpan(0x0cc6, 0x0cc6);
        categoryMc.addSpan(0x0ccc, 0x0ccd);
        categoryMc.addSpan(0x0d00, 0x0d01);
        categoryMc.addSpan(0x0d3d, 0x0d3d);
        categoryMc.addSpan(0x0d41, 0x0d44);
        categoryMc.addSpan(0x0d54, 0x0d56);
        categoryMc.addSpan(0x0d7a, 0x0d7f);
        categoryMc.addSpan(0x0dca, 0x0dca);
        categoryMc.addSpan(0x0dd2, 0x0dd6);
        categoryMc.addSpan(0x0de6, 0x0def);
        categoryMc.addSpan(0x0f3d, 0x0f3d);
        categoryMc.addSpan(0x0f71, 0x0f7e);
        categoryMc.addSpan(0x1000, 0x102a);
        categoryMc.addSpan(0x102d, 0x1030);
        categoryMc.addSpan(0x1032, 0x1037);
        categoryMc.addSpan(0x1039, 0x103a);
        categoryMc.addSpan(0x1050, 0x1055);
        categoryMc.addSpan(0x1061, 0x1061);
        categoryMc.addSpan(0x1065, 0x1066);
        categoryMc.addSpan(0x1082, 0x1082);
        categoryMc.addSpan(0x1085, 0x1086);
        categoryMc.addSpan(0x108e, 0x108e);
        categoryMc.addSpan(0x1090, 0x1099);
        categoryMc.addSpan(0x17b4, 0x17b5);
        categoryMc.addSpan(0x17b7, 0x17bd);
        categoryMc.addSpan(0x17c6, 0x17c6);
        categoryMc.addSpan(0x1920, 0x1922);
        categoryMc.addSpan(0x1927, 0x1928);
        categoryMc.addSpan(0x1932, 0x1932);
        categoryMc.addSpan(0x1a17, 0x1a18);
        categoryMc.addSpan(0x1a20, 0x1a54);
        categoryMc.addSpan(0x1a56, 0x1a56);
        categoryMc.addSpan(0x1a58, 0x1a60);
        categoryMc.addSpan(0x1a62, 0x1a62);
        categoryMc.addSpan(0x1a65, 0x1a6c);
        categoryMc.addSpan(0x1b00, 0x1b03);
        categoryMc.addSpan(0x1b34, 0x1b34);
        categoryMc.addSpan(0x1b36, 0x1b3a);
        categoryMc.addSpan(0x1b3c, 0x1b3c);
        categoryMc.addSpan(0x1b42, 0x1b42);
        categoryMc.addSpan(0x1b80, 0x1b81);
        categoryMc.addSpan(0x1b83, 0x1ba0);
        categoryMc.addSpan(0x1ba2, 0x1ba5);
        categoryMc.addSpan(0x1ba8, 0x1ba9);
        categoryMc.addSpan(0x1be6, 0x1be6);
        categoryMc.addSpan(0x1be8, 0x1be9);
        categoryMc.addSpan(0x1bed, 0x1bed);
        categoryMc.addSpan(0x1bef, 0x1bf1);
        categoryMc.addSpan(0x1c00, 0x1c23);
        categoryMc.addSpan(0x1c2c, 0x1c33);
        categoryMc.addSpan(0x1cd4, 0x1ce0);
        categoryMc.addSpan(0x1cee, 0x1cf1);
        categoryMc.addSpan(0x1cf5, 0x1cf6);
        categoryMc.addSpan(0x302a, 0x302d);
        categoryMc.addSpan(0xa80c, 0xa822);
        categoryMc.addSpan(0xa825, 0xa826);
        categoryMc.addSpan(0xa874, 0xa877);
        categoryMc.addSpan(0xa882, 0xa8b3);
        categoryMc.addSpan(0xa947, 0xa951);
        categoryMc.addSpan(0xa980, 0xa982);
        categoryMc.addSpan(0xa9b3, 0xa9b3);
        categoryMc.addSpan(0xa9b6, 0xa9b9);
        categoryMc.addSpan(0xa9bc, 0xa9bc);
        categoryMc.addSpan(0xaa29, 0xaa2e);
        categoryMc.addSpan(0xaa31, 0xaa32);
        categoryMc.addSpan(0xaa4c, 0xaa4c);
        categoryMc.addSpan(0xaa7a, 0xaa7a);
        categoryMc.addSpan(0xaa7c, 0xaa7c);
        categoryMc.addSpan(0xaae0, 0xaaea);
        categoryMc.addSpan(0xaaec, 0xaaed);
        categoryMc.addSpan(0xaaf3, 0xaaf4);
        categoryMc.addSpan(0xabc0, 0xabe2);
        categoryMc.addSpan(0xabe5, 0xabe5);
        categoryMc.addSpan(0xabe8, 0xabe8);
        categoryMc.addSpan(0xabeb, 0xabeb);
        categoryMc.addSpan(0x00010cfa, 0x00010e7e);
        categoryMc.addSpan(0x00011001, 0x00011001);
        categoryMc.addSpan(0x0001107f, 0x00011081);
        categoryMc.addSpan(0x00011083, 0x000110af);
        categoryMc.addSpan(0x000110b3, 0x000110b6);
        categoryMc.addSpan(0x00011127, 0x0001112b);
        categoryMc.addSpan(0x00011180, 0x00011181);
        categoryMc.addSpan(0x00011183, 0x000111b2);
        categoryMc.addSpan(0x000111b6, 0x000111be);
        categoryMc.addSpan(0x00011200, 0x0001122b);
        categoryMc.addSpan(0x0001122f, 0x00011231);
        categoryMc.addSpan(0x00011234, 0x00011234);
        categoryMc.addSpan(0x000112df, 0x000112df);
        categoryMc.addSpan(0x00011300, 0x00011301);
        categoryMc.addSpan(0x0001133d, 0x0001133d);
        categoryMc.addSpan(0x00011340, 0x00011340);
        categoryMc.addSpan(0x00011350, 0x00011350);
        categoryMc.addSpan(0x0001135d, 0x00011361);
        categoryMc.addSpan(0x00011400, 0x00011434);
        categoryMc.addSpan(0x00011438, 0x0001143f);
        categoryMc.addSpan(0x00011442, 0x00011444);
        categoryMc.addSpan(0x00011480, 0x000114af);
        categoryMc.addSpan(0x000114b3, 0x000114b8);
        categoryMc.addSpan(0x000114ba, 0x000114ba);
        categoryMc.addSpan(0x000114bf, 0x000114c0);
        categoryMc.addSpan(0x00011580, 0x000115ae);
        categoryMc.addSpan(0x000115b2, 0x000115b5);
        categoryMc.addSpan(0x000115bc, 0x000115bd);
        categoryMc.addSpan(0x00011600, 0x0001162f);
        categoryMc.addSpan(0x00011633, 0x0001163a);
        categoryMc.addSpan(0x0001163d, 0x0001163d);
        categoryMc.addSpan(0x000116ab, 0x000116ab);
        categoryMc.addSpan(0x000116ad, 0x000116ad);
        categoryMc.addSpan(0x000116b0, 0x000116b5);
        categoryMc.addSpan(0x0001171d, 0x0001171f);
        categoryMc.addSpan(0x00011722, 0x00011725);
        categoryMc.addSpan(0x00011a01, 0x00011a06);
        categoryMc.addSpan(0x00011a33, 0x00011a38);
        categoryMc.addSpan(0x00011a51, 0x00011a56);
        categoryMc.addSpan(0x00011a8a, 0x00011a96);
        categoryMc.addSpan(0x00011ac0, 0x00011c2e);
        categoryMc.addSpan(0x00011c30, 0x00011c3d);
        categoryMc.addSpan(0x00011c92, 0x00011ca7);
        categoryMc.addSpan(0x00011caa, 0x00011cb0);
        categoryMc.addSpan(0x00011cb2, 0x00011cb3);
        categoryMc.addSpan(0x00016b63, 0x00016f50);
        categoryMc.addSpan(0x0001d000, 0x0001d164);
        categoryMc.addSpan(0x0001d16a, 0x0001d16c);
        return categoryMc;
    }

    /**
     * The Unicode category Sk
     */
    private static UnicodeCategory categorySk = null;

    /**
     * Gets the Unicode category Sk
     *
     * @return The Unicode category Sk
     */
    public static UnicodeCategory getSk() {
        if (categorySk != null)
            return categorySk;
        categorySk = new UnicodeCategory("Sk");
        categorySk.addSpan(0x005d, 0x005d);
        categorySk.addSpan(0x005f, 0x005f);
        categorySk.addSpan(0x00a7, 0x00a7);
        categorySk.addSpan(0x00ae, 0x00ae);
        categorySk.addSpan(0x00b2, 0x00b3);
        categorySk.addSpan(0x00b6, 0x00b7);
        categorySk.addSpan(0x02b0, 0x02c1);
        categorySk.addSpan(0x02c6, 0x02d1);
        categorySk.addSpan(0x02e0, 0x02e4);
        categorySk.addSpan(0x02ec, 0x02ec);
        categorySk.addSpan(0x02ee, 0x02ee);
        categorySk.addSpan(0x0374, 0x0374);
        categorySk.addSpan(0x037f, 0x037f);
        categorySk.addSpan(0x1fbc, 0x1fbc);
        categorySk.addSpan(0x1fbe, 0x1fbe);
        categorySk.addSpan(0x1fcc, 0x1fcc);
        categorySk.addSpan(0x1fd8, 0x1fdb);
        categorySk.addSpan(0x1fe8, 0x1fec);
        categorySk.addSpan(0x1ffc, 0x1ffc);
        categorySk.addSpan(0x3099, 0x309a);
        categorySk.addSpan(0xa6f2, 0xa6f7);
        categorySk.addSpan(0xa717, 0xa71f);
        categorySk.addSpan(0xa788, 0xa788);
        categorySk.addSpan(0xab30, 0xab5a);
        categorySk.addSpan(0xfb2a, 0xfbb1);
        categorySk.addSpan(0xff3d, 0xff3d);
        categorySk.addSpan(0xff3f, 0xff3f);
        categorySk.addSpan(0xffe2, 0xffe2);
        categorySk.addSpan(0x0001f110, 0x0001f3fa);
        return categorySk;
    }

    /**
     * The Unicode category Me
     */
    private static UnicodeCategory categoryMe = null;

    /**
     * Gets the Unicode category Me
     *
     * @return The Unicode category Me
     */
    public static UnicodeCategory getMe() {
        if (categoryMe != null)
            return categoryMe;
        categoryMe = new UnicodeCategory("Me");
        categoryMe.addSpan(0x0483, 0x0487);
        categoryMe.addSpan(0x1ab0, 0x1abd);
        categoryMe.addSpan(0x20d0, 0x20dc);
        categoryMe.addSpan(0x20e1, 0x20e1);
        categoryMe.addSpan(0xa66f, 0xa66f);
        return categoryMe;
    }

    /**
     * The Unicode category Sm
     */
    private static UnicodeCategory categorySm = null;

    /**
     * Gets the Unicode category Sm
     *
     * @return The Unicode category Sm
     */
    public static UnicodeCategory getSm() {
        if (categorySm != null)
            return categorySm;
        categorySm = new UnicodeCategory("Sm");
        categorySm.addSpan(0x002a, 0x002a);
        categorySm.addSpan(0x003a, 0x003b);
        categorySm.addSpan(0x007b, 0x007b);
        categorySm.addSpan(0x007d, 0x007d);
        categorySm.addSpan(0x00ab, 0x00ab);
        categorySm.addSpan(0x00b0, 0x00b0);
        categorySm.addSpan(0x00c0, 0x00d6);
        categorySm.addSpan(0x00df, 0x00f6);
        categorySm.addSpan(0x03f5, 0x03f5);
        categorySm.addSpan(0x0600, 0x0605);
        categorySm.addSpan(0x2041, 0x2043);
        categorySm.addSpan(0x2047, 0x2051);
        categorySm.addSpan(0x2074, 0x2079);
        categorySm.addSpan(0x2080, 0x2089);
        categorySm.addSpan(0x2116, 0x2117);
        categorySm.addSpan(0x213e, 0x213f);
        categorySm.addSpan(0x214a, 0x214a);
        categorySm.addSpan(0x218a, 0x218b);
        categorySm.addSpan(0x2195, 0x2199);
        categorySm.addSpan(0x219c, 0x219f);
        categorySm.addSpan(0x21a1, 0x21a2);
        categorySm.addSpan(0x21a4, 0x21a5);
        categorySm.addSpan(0x21a7, 0x21ad);
        categorySm.addSpan(0x21af, 0x21cd);
        categorySm.addSpan(0x21d0, 0x21d1);
        categorySm.addSpan(0x21d3, 0x21d3);
        categorySm.addSpan(0x21d5, 0x21f3);
        categorySm.addSpan(0x230c, 0x231f);
        categorySm.addSpan(0x232b, 0x237b);
        categorySm.addSpan(0x237d, 0x239a);
        categorySm.addSpan(0x23b4, 0x23db);
        categorySm.addSpan(0x2500, 0x25b6);
        categorySm.addSpan(0x25b8, 0x25c0);
        categorySm.addSpan(0x25c2, 0x25f7);
        categorySm.addSpan(0x2600, 0x266e);
        categorySm.addSpan(0x2794, 0x27bf);
        categorySm.addSpan(0x27c6, 0x27c6);
        categorySm.addSpan(0x27ef, 0x27ef);
        categorySm.addSpan(0x2800, 0x28ff);
        categorySm.addSpan(0x2998, 0x2998);
        categorySm.addSpan(0x29db, 0x29db);
        categorySm.addSpan(0x29fd, 0x29fd);
        categorySm.addSpan(0x2b00, 0x2b2f);
        categorySm.addSpan(0x2b45, 0x2b46);
        categorySm.addSpan(0xfb1f, 0xfb28);
        categorySm.addSpan(0xfe5f, 0xfe61);
        categorySm.addSpan(0xfe63, 0xfe63);
        categorySm.addSpan(0xff0a, 0xff0a);
        categorySm.addSpan(0xff1a, 0xff1b);
        categorySm.addSpan(0xff5b, 0xff5b);
        categorySm.addSpan(0xff5d, 0xff5d);
        categorySm.addSpan(0xffe0, 0xffe1);
        categorySm.addSpan(0xffe8, 0xffe8);
        categorySm.addSpan(0x0001d6a8, 0x0001d6c0);
        categorySm.addSpan(0x0001d6c2, 0x0001d6da);
        categorySm.addSpan(0x0001d6e2, 0x0001d6fa);
        categorySm.addSpan(0x0001d6fc, 0x0001d714);
        categorySm.addSpan(0x0001d71c, 0x0001d734);
        categorySm.addSpan(0x0001d736, 0x0001d74e);
        categorySm.addSpan(0x0001d756, 0x0001d76e);
        categorySm.addSpan(0x0001d770, 0x0001d788);
        categorySm.addSpan(0x0001d790, 0x0001d7a8);
        categorySm.addSpan(0x0001d7aa, 0x0001d7c2);
        categorySm.addSpan(0x0001ee00, 0x0001eebb);
        return categorySm;
    }

    /**
     * The Unicode category So
     */
    private static UnicodeCategory categorySo = null;

    /**
     * Gets the Unicode category So
     *
     * @return The Unicode category So
     */
    public static UnicodeCategory getSo() {
        if (categorySo != null)
            return categorySo;
        categorySo = new UnicodeCategory("So");
        categorySo.addSpan(0x00a2, 0x00a5);
        categorySo.addSpan(0x00a8, 0x00a8);
        categorySo.addSpan(0x00ad, 0x00ad);
        categorySo.addSpan(0x00af, 0x00af);
        categorySo.addSpan(0x0481, 0x0481);
        categorySo.addSpan(0x058a, 0x058a);
        categorySo.addSpan(0x060c, 0x060d);
        categorySo.addSpan(0x06dd, 0x06dd);
        categorySo.addSpan(0x06e7, 0x06e8);
        categorySo.addSpan(0x06fa, 0x06fc);
        categorySo.addSpan(0x07f4, 0x07f5);
        categorySo.addSpan(0x09f4, 0x09f9);
        categorySo.addSpan(0x0b66, 0x0b6f);
        categorySo.addSpan(0x0bf0, 0x0bf2);
        categorySo.addSpan(0x0bf9, 0x0bf9);
        categorySo.addSpan(0x0c78, 0x0c7e);
        categorySo.addSpan(0x0d4e, 0x0d4e);
        categorySo.addSpan(0x0d70, 0x0d78);
        categorySo.addSpan(0x0edc, 0x0f00);
        categorySo.addSpan(0x0f04, 0x0f12);
        categorySo.addSpan(0x0f14, 0x0f14);
        categorySo.addSpan(0x0f18, 0x0f19);
        categorySo.addSpan(0x0f2a, 0x0f33);
        categorySo.addSpan(0x0f35, 0x0f35);
        categorySo.addSpan(0x0f37, 0x0f37);
        categorySo.addSpan(0x0f8d, 0x0fbc);
        categorySo.addSpan(0x0fc6, 0x0fc6);
        categorySo.addSpan(0x0fd0, 0x0fd4);
        categorySo.addSpan(0x109d, 0x109d);
        categorySo.addSpan(0x1380, 0x138f);
        categorySo.addSpan(0x1939, 0x193b);
        categorySo.addSpan(0x19da, 0x19da);
        categorySo.addSpan(0x1b5a, 0x1b60);
        categorySo.addSpan(0x1b6b, 0x1b73);
        categorySo.addSpan(0x20e5, 0x20f0);
        categorySo.addSpan(0x2102, 0x2102);
        categorySo.addSpan(0x2107, 0x2107);
        categorySo.addSpan(0x2113, 0x2113);
        categorySo.addSpan(0x2115, 0x2115);
        categorySo.addSpan(0x2119, 0x211d);
        categorySo.addSpan(0x2124, 0x2124);
        categorySo.addSpan(0x2126, 0x2126);
        categorySo.addSpan(0x2128, 0x2128);
        categorySo.addSpan(0x212a, 0x212d);
        categorySo.addSpan(0x2139, 0x2139);
        categorySo.addSpan(0x2146, 0x2149);
        categorySo.addSpan(0x214b, 0x214b);
        categorySo.addSpan(0x214e, 0x214e);
        categorySo.addSpan(0x2189, 0x2189);
        categorySo.addSpan(0x2190, 0x2194);
        categorySo.addSpan(0x219a, 0x219b);
        categorySo.addSpan(0x21a0, 0x21a0);
        categorySo.addSpan(0x21a3, 0x21a3);
        categorySo.addSpan(0x21a6, 0x21a6);
        categorySo.addSpan(0x21ae, 0x21ae);
        categorySo.addSpan(0x21ce, 0x21cf);
        categorySo.addSpan(0x21d2, 0x21d2);
        categorySo.addSpan(0x21d4, 0x21d4);
        categorySo.addSpan(0x21f4, 0x22ff);
        categorySo.addSpan(0x230b, 0x230b);
        categorySo.addSpan(0x2320, 0x2321);
        categorySo.addSpan(0x232a, 0x232a);
        categorySo.addSpan(0x237c, 0x237c);
        categorySo.addSpan(0x239b, 0x23b3);
        categorySo.addSpan(0x23dc, 0x23e1);
        categorySo.addSpan(0x2460, 0x249b);
        categorySo.addSpan(0x24ea, 0x24ff);
        categorySo.addSpan(0x25b7, 0x25b7);
        categorySo.addSpan(0x25c1, 0x25c1);
        categorySo.addSpan(0x25f8, 0x25ff);
        categorySo.addSpan(0x266f, 0x266f);
        categorySo.addSpan(0x2776, 0x2793);
        categorySo.addSpan(0x27f0, 0x27ff);
        categorySo.addSpan(0x29fe, 0x2aff);
        categorySo.addSpan(0x2b30, 0x2b44);
        categorySo.addSpan(0x2b47, 0x2b4c);
        categorySo.addSpan(0x2ce3, 0x2ce4);
        categorySo.addSpan(0x2e43, 0x2e49);
        categorySo.addSpan(0x3001, 0x3003);
        categorySo.addSpan(0x3011, 0x3011);
        categorySo.addSpan(0x301e, 0x301f);
        categorySo.addSpan(0x3031, 0x3035);
        categorySo.addSpan(0x303d, 0x303d);
        categorySo.addSpan(0x30ff, 0x318e);
        categorySo.addSpan(0x3192, 0x3195);
        categorySo.addSpan(0x31a0, 0x31ba);
        categorySo.addSpan(0x31f0, 0x31ff);
        categorySo.addSpan(0x3220, 0x3229);
        categorySo.addSpan(0x3248, 0x324f);
        categorySo.addSpan(0x3251, 0x325f);
        categorySo.addSpan(0x3280, 0x3289);
        categorySo.addSpan(0x32b1, 0x32bf);
        categorySo.addSpan(0x3400, 0x4db5);
        categorySo.addSpan(0xa016, 0xa48c);
        categorySo.addSpan(0xa827, 0xa827);
        categorySo.addSpan(0xa830, 0xa835);
        categorySo.addSpan(0xa838, 0xa838);
        categorySo.addSpan(0xaa71, 0xaa76);
        categorySo.addSpan(0xfdfc, 0xfdfc);
        categorySo.addSpan(0xffe3, 0xffe3);
        categorySo.addSpan(0xffe5, 0xffe6);
        categorySo.addSpan(0xffe9, 0xffec);
        categorySo.addSpan(0xfff9, 0xfffb);
        categorySo.addSpan(0x00010107, 0x00010133);
        categorySo.addSpan(0x00010175, 0x00010178);
        categorySo.addSpan(0x0001018a, 0x0001018b);
        categorySo.addSpan(0x00010860, 0x00010876);
        categorySo.addSpan(0x00010ac0, 0x00010ac7);
        categorySo.addSpan(0x0001173c, 0x0001173e);
        categorySo.addSpan(0x00016b37, 0x00016b3b);
        categorySo.addSpan(0x00016b44, 0x00016b44);
        categorySo.addSpan(0x00017000, 0x0001bc99);
        categorySo.addSpan(0x0001bca0, 0x0001bca3);
        categorySo.addSpan(0x0001d167, 0x0001d169);
        categorySo.addSpan(0x0001d17b, 0x0001d182);
        categorySo.addSpan(0x0001d185, 0x0001d18b);
        categorySo.addSpan(0x0001d1aa, 0x0001d1ad);
        categorySo.addSpan(0x0001d242, 0x0001d244);
        categorySo.addSpan(0x0001d7ce, 0x0001d7ff);
        categorySo.addSpan(0x0001da00, 0x0001da36);
        categorySo.addSpan(0x0001da3b, 0x0001da6c);
        categorySo.addSpan(0x0001da75, 0x0001da75);
        categorySo.addSpan(0x0001da84, 0x0001da84);
        categorySo.addSpan(0x0001eef0, 0x0001eef1);
        categorySo.addSpan(0x0001f100, 0x0001f10c);
        categorySo.addSpan(0x0001f3fb, 0x0001f3ff);
        return categorySo;
    }

    /**
     * The Unicode category P
     */
    private static UnicodeCategory categoryP = null;

    /**
     * Gets the Unicode category P
     *
     * @return The Unicode category P
     */
    public static UnicodeCategory getP() {
        if (categoryP != null)
            return categoryP;
        categoryP = new UnicodeCategory("P");
        categoryP.aggregate(getPc());
        categoryP.aggregate(getPd());
        categoryP.aggregate(getPe());
        categoryP.aggregate(getPf());
        categoryP.aggregate(getPi());
        categoryP.aggregate(getPo());
        categoryP.aggregate(getPs());
        return categoryP;
    }

    /**
     * The Unicode category S
     */
    private static UnicodeCategory categoryS = null;

    /**
     * Gets the Unicode category S
     *
     * @return The Unicode category S
     */
    public static UnicodeCategory getS() {
        if (categoryS != null)
            return categoryS;
        categoryS = new UnicodeCategory("S");
        categoryS.aggregate(getSc());
        categoryS.aggregate(getSk());
        categoryS.aggregate(getSm());
        categoryS.aggregate(getSo());
        return categoryS;
    }

    /**
     * The Unicode category C
     */
    private static UnicodeCategory categoryC = null;

    /**
     * Gets the Unicode category C
     *
     * @return The Unicode category C
     */
    public static UnicodeCategory getC() {
        if (categoryC != null)
            return categoryC;
        categoryC = new UnicodeCategory("C");
        categoryC.aggregate(getCc());
        categoryC.aggregate(getCf());
        categoryC.aggregate(getCo());
        categoryC.aggregate(getCs());
        return categoryC;
    }

    /**
     * The Unicode category Z
     */
    private static UnicodeCategory categoryZ = null;

    /**
     * Gets the Unicode category Z
     *
     * @return The Unicode category Z
     */
    public static UnicodeCategory getZ() {
        if (categoryZ != null)
            return categoryZ;
        categoryZ = new UnicodeCategory("Z");
        categoryZ.aggregate(getZl());
        categoryZ.aggregate(getZp());
        categoryZ.aggregate(getZs());
        return categoryZ;
    }

    /**
     * The Unicode category L
     */
    private static UnicodeCategory categoryL = null;

    /**
     * Gets the Unicode category L
     *
     * @return The Unicode category L
     */
    public static UnicodeCategory getL() {
        if (categoryL != null)
            return categoryL;
        categoryL = new UnicodeCategory("L");
        categoryL.aggregate(getLl());
        categoryL.aggregate(getLm());
        categoryL.aggregate(getLo());
        categoryL.aggregate(getLt());
        categoryL.aggregate(getLu());
        return categoryL;
    }

    /**
     * The Unicode category M
     */
    private static UnicodeCategory categoryM = null;

    /**
     * Gets the Unicode category M
     *
     * @return The Unicode category M
     */
    public static UnicodeCategory getM() {
        if (categoryM != null)
            return categoryM;
        categoryM = new UnicodeCategory("M");
        categoryM.aggregate(getMn());
        categoryM.aggregate(getMc());
        categoryM.aggregate(getMe());
        return categoryM;
    }

    /**
     * The Unicode category N
     */
    private static UnicodeCategory categoryN = null;

    /**
     * Gets the Unicode category N
     *
     * @return The Unicode category N
     */
    public static UnicodeCategory getN() {
        if (categoryN != null)
            return categoryN;
        categoryN = new UnicodeCategory("N");
        categoryN.aggregate(getNd());
        categoryN.aggregate(getNl());
        categoryN.aggregate(getNo());
        return categoryN;
    }

    /**
     * The database of Unicode categories accessible by names
     */
    private static Map<String, UnicodeCategory> db = null;

    /**
     * Gets the category with the given name
     *
     * @param name A Unicode category name
     * @return The corresponding category, or null if it does not exists
     */
    public static UnicodeCategory getCategory(String name) {
        if (db != null)
            return db.get(name);
        db = new HashMap<>();
        db.put("Cc", getCc());
        db.put("Mn", getMn());
        db.put("Cf", getCf());
        db.put("Co", getCo());
        db.put("Cs", getCs());
        db.put("Zl", getZl());
        db.put("Pc", getPc());
        db.put("Pd", getPd());
        db.put("Pe", getPe());
        db.put("Nd", getNd());
        db.put("Pf", getPf());
        db.put("Zp", getZp());
        db.put("Zs", getZs());
        db.put("Pi", getPi());
        db.put("Nl", getNl());
        db.put("Po", getPo());
        db.put("Ll", getLl());
        db.put("No", getNo());
        db.put("Lm", getLm());
        db.put("Ps", getPs());
        db.put("Lo", getLo());
        db.put("Lt", getLt());
        db.put("Lu", getLu());
        db.put("Sc", getSc());
        db.put("Mc", getMc());
        db.put("Sk", getSk());
        db.put("Me", getMe());
        db.put("Sm", getSm());
        db.put("So", getSo());
        db.put("P", getP());
        db.put("S", getS());
        db.put("C", getC());
        db.put("Z", getZ());
        db.put("L", getL());
        db.put("M", getM());
        db.put("N", getN());
        return db.get(name);
    }
}
